CREATE OR REPLACE FUNCTION "ENOC"."ACFE_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5);
 CURSOR C_CREDITOS IS
 
SELECT COUNT(DISTINCT(CODIGO_PERSONAL)) 
FROM ALUM_ESTADO 
WHERE CARGA_ID = S_CARGA
AND ESTADO = 'I'
AND FACULTAD(ALUM_CARRERA_HISTORICA(CODIGO_PERSONAL,CARGA_ID, BLOQUE_ID)) = S_FAC 
AND CODIGO_PERSONAL IN 
   (SELECT CODIGO_PERSONAL FROM ALUM_ACADEMICO WHERE CLAS_FIN = '1');
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/




CREATE OR REPLACE FUNCTION "ENOC"."ACTIVIDAD_EVALUACION" (S_ACTIVIDAD IN NUMBER) RETURN NUMBER IS
  P_EVAL  NUMBER(3); 
CURSOR C_EVAL IS 
SELECT EVALUACION_ID 
FROM CARGA_GRUPO_ACTIVIDAD 
WHERE ACTIVIDAD_ID = S_ACTIVIDAD;
BEGIN
 OPEN C_EVAL;
 FETCH C_EVAL INTO P_EVAL;
 IF NOT C_EVAL%FOUND THEN
    P_EVAL := 0;
 END IF;
 CLOSE C_EVAL;
 RETURN( P_EVAL );
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ACTIVIDAD_POR_EVAL" (PAR_CURSO_CARGA_ID IN VARCHAR2, PAR_EVALUACION_ID IN NUMBER) RETURN NUMBER IS
NUM_ACTIVIDADES  NUMBER(4);
CURSOR C_ACTIVIDADES IS
 SELECT COUNT(ACTIVIDAD_ID) FROM ENOC.CARGA_GRUPO_ACTIVIDAD WHERE CURSO_CARGA_ID = PAR_CURSO_CARGA_ID AND EVALUACION_ID = PAR_EVALUACION_ID;
BEGIN
 OPEN C_ACTIVIDADES;
 FETCH C_ACTIVIDADES INTO NUM_ACTIVIDADES;
 IF NOT C_ACTIVIDADES%FOUND THEN
    NUM_ACTIVIDADES := 0;
 END IF;
 CLOSE C_ACTIVIDADES;
 RETURN( NUM_ACTIVIDADES );
END; 
/

CREATE OR REPLACE FUNCTION "ENOC"."ACTIVIDAD_CON_EVAL" (PAR_CURSO_CARGA_ID IN VARCHAR2, PAR_EVALUACION_ID IN NUMBER) RETURN NUMBER IS
NUM_ACTIVIDADES  NUMBER(4);
CURSOR C_ACTIVIDADES IS
 SELECT COUNT(ACTIVIDAD_ID) FROM ENOC.KRDX_ALUMNO_ACTIV WHERE CURSO_CARGA_ID = PAR_CURSO_CARGA_ID AND EVALUACION_ID = PAR_EVALUACION_ID;
BEGIN
 OPEN C_ACTIVIDADES;
 FETCH C_ACTIVIDADES INTO NUM_ACTIVIDADES;
 IF NOT C_ACTIVIDADES%FOUND THEN
    NUM_ACTIVIDADES := 0;
 END IF;
 CLOSE C_ACTIVIDADES;
 RETURN( NUM_ACTIVIDADES );
END;
/


CREATE OR REPLACE FUNCTION "ENOC"."ACTIVIDAD_VALOR" (S_ACTIVIDAD IN NUMBER) RETURN NUMBER IS
  P_VALOR  NUMBER(3); 
CURSOR C_VALOR IS 
SELECT VALOR 
FROM CARGA_GRUPO_ACTIVIDAD 
WHERE ACTIVIDAD_ID = S_ACTIVIDAD;
BEGIN
 OPEN C_VALOR;
 FETCH C_VALOR INTO P_VALOR;
 IF NOT C_VALOR%FOUND THEN
    P_VALOR := 0;
 END IF;
 CLOSE C_VALOR;
 RETURN( P_VALOR );
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_CICLO" (S_CODIGO IN VARCHAR2, S_PLAN IN VARCHAR2) RETURN NUMBER IS
 P_CICLO NUMBER(2);
 CURSOR C_CICLO IS
     SELECT
       COALESCE(CICLO,0)
     FROM ALUM_PLAN
     WHERE CODIGO_PERSONAL = S_CODIGO
     AND PLAN_ID = S_PLAN;
BEGIN
 OPEN C_CICLO;
 FETCH C_CICLO INTO P_CICLO;
 IF NOT C_CICLO%FOUND THEN
    P_CICLO := 0;
 END IF;
 CLOSE C_CICLO;
 RETURN( P_CICLO );
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_CICLO_HIST" (S_CODIGO IN VARCHAR2, S_CARGA IN VARCHAR2, S_PLAN IN VARCHAR2) RETURN NUMBER IS
 P_CICLO NUMBER(2);
 CURSOR C_CICLO IS
    SELECT
       COALESCE(SEMESTRE,0)
    FROM MATEO.FES_CCOBRO
    WHERE MATRICULA = S_CODIGO
    AND CARGA_ID = S_CARGA
    AND PLAN_ID = S_PLAN;
BEGIN
  OPEN C_CICLO;
  FETCH C_CICLO INTO P_CICLO;
  IF NOT C_CICLO%FOUND THEN
    P_CICLO := 0;
  END IF;
  CLOSE C_CICLO;
  RETURN( P_CICLO );
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_CICLO_HIST2" (S_CODIGO IN VARCHAR2, S_CARGA IN VARCHAR2, S_BLOQUE IN NUMBER) RETURN NUMBER IS
 P_CICLO NUMBER(2);
 CURSOR C_CICLO IS
    SELECT
       COALESCE(SEMESTRE,0)
    FROM MATEO.FES_CCOBRO
    WHERE MATRICULA = S_CODIGO
    AND CARGA_ID = S_CARGA
    AND BLOQUE = S_BLOQUE;
BEGIN
  OPEN C_CICLO;
  FETCH C_CICLO INTO P_CICLO;
  IF NOT C_CICLO%FOUND THEN
    P_CICLO := 0;
  END IF;
  CLOSE C_CICLO;
  RETURN( P_CICLO );
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_CLASFIN" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_CLASFIN VARCHAR2(20);
 CURSOR C_CLASFIN IS
     SELECT
     DECODE(CLAS_FIN, 1, 'ACFE', 2, 'NO-ACFE', 'VACIO')
     FROM ALUM_ACADEMICO
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_CLASFIN;
 FETCH C_CLASFIN INTO P_CLASFIN;
 IF NOT C_CLASFIN%FOUND THEN
    P_CLASFIN := 'VACIO';
 END IF;
 CLOSE C_CLASFIN;
 RETURN( P_CLASFIN );
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_ESTADO" (MATRICULA IN VARCHAR2) RETURN VARCHAR2 IS
 SESTADO VARCHAR2(60);
 CURSOR C_ESTADO IS
     SELECT C.NOMBRE_ESTADO
     FROM CAT_ESTADO C, ALUM_PERSONAL D
     WHERE D.CODIGO_PERSONAL = MATRICULA AND D.ESTADO_ID = C.ESTADO_ID AND D.PAIS_ID=C.PAIS_ID;
BEGIN
 OPEN C_ESTADO;
 FETCH C_ESTADO INTO SESTADO;
 IF NOT C_ESTADO%FOUND THEN
    SESTADO := '-';
 END IF;
 CLOSE C_ESTADO;
 RETURN( SESTADO );
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_FAC_ID" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_CLAVE_FAC  VARCHAR2(3);
 CURSOR C_FAC IS
     SELECT
     FACULTAD(CARRERA_ID)
     FROM MAPA_PLAN MP, ALUM_PLAN PL
     WHERE PL.CODIGO_PERSONAL = S_CODIGO
     AND PL.ESTADO = '1' AND MP.PLAN_ID = PL.PLAN_ID;
BEGIN
 OPEN C_FAC;
 FETCH C_FAC INTO P_CLAVE_FAC;
 IF NOT C_FAC%FOUND THEN
    P_CLAVE_FAC := 'X';
 END IF;
 CLOSE C_FAC;
 RETURN( P_CLAVE_FAC);
END;
/
CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_GRADO" (S_CODIGO IN VARCHAR2, S_PLAN IN VARCHAR2) RETURN NUMBER IS
 P_GRADO NUMBER(2);
 CURSOR C_GRADO IS
     SELECT
       COALESCE(GRADO,0)
     FROM ALUM_PLAN
     WHERE CODIGO_PERSONAL = S_CODIGO
     AND PLAN_ID = S_PLAN;
BEGIN
 OPEN C_GRADO;
 FETCH C_GRADO INTO P_GRADO;
 IF NOT C_GRADO%FOUND THEN
    P_GRADO := 0;
 END IF;
 CLOSE C_GRADO;
 RETURN( P_GRADO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_MODALIDAD" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_MODALIDAD VARCHAR2(30);
 CURSOR C_MODALIDAD IS
     SELECT
     CM.NOMBRE_MODALIDAD
     FROM ALUM_ACADEMICO AA, CAT_MODALIDAD CM
     WHERE AA.CODIGO_PERSONAL = S_CODIGO
     AND CM.MODALIDAD_ID=AA.MODALIDAD_ID;
BEGIN
 OPEN C_MODALIDAD;
 FETCH C_MODALIDAD INTO P_MODALIDAD;
 IF NOT C_MODALIDAD%FOUND THEN
    P_MODALIDAD := 'VACIO';
 END IF;
 CLOSE C_MODALIDAD;
 RETURN( P_MODALIDAD );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_MODALIDAD_ID" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_MODALIDAD NUMBER(2);
 CURSOR C_MODALIDAD IS
     SELECT
      MODALIDAD_ID
     FROM ALUM_ACADEMICO
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_MODALIDAD;
 FETCH C_MODALIDAD INTO P_MODALIDAD;
 IF NOT C_MODALIDAD%FOUND THEN
    P_MODALIDAD := 0;
 END IF;
 CLOSE C_MODALIDAD;
 RETURN( P_MODALIDAD );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_RESIDENCIA" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_RESIDENCIA VARCHAR2(20);
 CURSOR C_RESIDENCIA IS
     SELECT
     RESIDENCIA_ID
     FROM ALUM_ACADEMICO
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_RESIDENCIA;
 FETCH C_RESIDENCIA INTO P_RESIDENCIA;
 IF NOT C_RESIDENCIA%FOUND THEN
    P_RESIDENCIA := 'VACIO';
 END IF;
 CLOSE C_RESIDENCIA;
 RETURN( P_RESIDENCIA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_RESIDENCIA" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_RESIDENCIA VARCHAR2(20);
 CURSOR C_RESIDENCIA IS
     SELECT
     RESIDENCIA_ID
     FROM ALUM_ACADEMICO
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_RESIDENCIA;
 FETCH C_RESIDENCIA INTO P_RESIDENCIA;
 IF NOT C_RESIDENCIA%FOUND THEN
    P_RESIDENCIA := 'VACIO';
 END IF;
 CLOSE C_RESIDENCIA;
 RETURN( P_RESIDENCIA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_ACTIV_EVAL" (S_CURSO_CARGA_ID IN VARCHAR2, S_CODIGO IN VARCHAR2, S_EVALUACION IN NUMBER) RETURN NUMBER IS
  P_EVALUADAS NUMBER(4); 
CURSOR C_EVALUADAS IS 
   SELECT COALESCE(SUM(ACTIVIDAD_VALOR(ACTIVIDAD_ID)),0) FROM KRDX_ALUMNO_ACTIV 
   WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID
   AND CODIGO_PERSONAL = S_CODIGO
   AND ACTIVIDAD_EVALUACION(ACTIVIDAD_ID) = S_EVALUACION;
BEGIN
 OPEN C_EVALUADAS;
 FETCH C_EVALUADAS INTO P_EVALUADAS;
 IF NOT C_EVALUADAS%FOUND THEN
    P_EVALUADAS := 0;
 END IF;
 CLOSE C_EVALUADAS;
 RETURN( P_EVALUADAS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_APELLIDO" (S_CODIGO_PERSONAL IN VARCHAR2) RETURN VARCHAR2 IS
 P_ALUMNO VARCHAR2(120);
 CURSOR C_ALUMNO IS
     SELECT
        TRIM(APELLIDO_PATERNO)||' '||TRIM(APELLIDO_MATERNO)||' '||TRIM(NOMBRE)
     FROM ALUM_PERSONAL
     WHERE CODIGO_PERSONAL = S_CODIGO_PERSONAL;

BEGIN
 OPEN C_ALUMNO;
 FETCH C_ALUMNO INTO P_ALUMNO;
 IF NOT C_ALUMNO%FOUND THEN
    P_ALUMNO := 'VACIO';
 END IF;
 CLOSE C_ALUMNO;
 RETURN( P_ALUMNO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_APELLIDOS" (S_CODIGO_PERSONAL IN VARCHAR2) RETURN VARCHAR2 IS
 P_ALUMNO VARCHAR2(120);
 CURSOR C_ALUMNO IS
     SELECT TRIM(APELLIDO_PATERNO)||' '||TRIM(APELLIDO_MATERNO) FROM ALUM_PERSONAL WHERE CODIGO_PERSONAL = S_CODIGO_PERSONAL;
BEGIN
 OPEN C_ALUMNO;
 FETCH C_ALUMNO INTO P_ALUMNO;
 IF NOT C_ALUMNO%FOUND THEN
    P_ALUMNO := 'VACIO';
 END IF;
 CLOSE C_ALUMNO;
 RETURN( P_ALUMNO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CARGA_CICLO" (S_CODIGO IN VARCHAR2, S_PLAN IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS   
   P_CREDITOS NUMBER(3);
   P_CICLO NUMBER(2);
   P_RESTO NUMBER(3);
   
   CURSOR C_CREDITOS IS
        SELECT SUM(CREDITOS) FROM ENOC.ALUMNO_CURSO
        WHERE CODIGO_PERSONAL = S_CODIGO
        AND TIPOCAL_ID IN ('1','I')
        AND SUBSTR(CURSO_ID,1,8) = S_PLAN
        AND (F_EVALUACION <= (SELECT F_FINAL FROM CARGA WHERE CARGA_ID = CARGA) OR CARGA_ID = CARGA);
   
   CURSOR C_CICLO IS
        SELECT CICLO, CREDITOS FROM ENOC.PLAN_CICLO WHERE PLAN_ID = S_PLAN AND CREDITOS != 0 ORDER BY CICLO;   
BEGIN
  P_CREDITOS:= 0; P_CICLO:= 1;

  OPEN C_CREDITOS;
  FETCH C_CREDITOS INTO P_CREDITOS;
  CLOSE C_CREDITOS;
  
  P_RESTO:= P_CREDITOS;
  
  FOR REGISTRO IN C_CICLO LOOP
     
  IF P_RESTO > REGISTRO.CREDITOS THEN
     P_RESTO:= P_RESTO - REGISTRO.CREDITOS;
     P_CICLO:= REGISTRO.CICLO + 1;   
  ELSE
     EXIT;
  END IF;     
  END LOOP;  
 
  RETURN( P_CICLO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CARRERA" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_CARRERA  VARCHAR2(100);
 CURSOR C_CARRERA IS
  SELECT CC.NOMBRE_CARRERA
  FROM ALUM_PLAN AP, MAPA_PLAN MP, CAT_CARRERA CC 
  WHERE AP.CODIGO_PERSONAL = S_CODIGO 
  AND AP.ESTADO = '1'
  AND MP.PLAN_ID = AP.PLAN_ID
  AND CC.CARRERA_ID = MP.CARRERA_ID;
BEGIN
 OPEN C_CARRERA;
 FETCH C_CARRERA INTO P_CARRERA;
 IF NOT C_CARRERA%FOUND THEN
    P_CARRERA := 'VACIO';
 END IF;
 CLOSE C_CARRERA;
 RETURN( P_CARRERA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CARRERA_HISTORICA" (S_CODIGO IN VARCHAR2,S_CARGA IN VARCHAR2, N_BLOQUE NUMBER) RETURN VARCHAR2 IS
 P_CARRERA VARCHAR2(5);
 P_CODIGO VARCHAR2(7);
  
 CURSOR C_HISTORIA IS
     SELECT CARRERA_ID 
	 FROM MATEO.FES_CCOBRO 
	 WHERE MATRICULA = S_CODIGO
	 AND CARGA_ID = S_CARGA
	 AND BLOQUE= N_BLOQUE;
     
 CURSOR C_CARRERA IS
     SELECT MP.CARRERA_ID
     FROM ALUM_PLAN AP, MAPA_PLAN MP 
     WHERE AP.CODIGO_PERSONAL = S_CODIGO
     AND AP.ESTADO = '1'
     AND MP.PLAN_ID = AP.PLAN_ID;

 CURSOR C_CAMBIA_CARRERA IS
    SELECT MATRICULA FROM MATEO.FES_CCOBRO 
    WHERE MATRICULA = S_CODIGO
    AND CARGA_ID = S_CARGA
    AND BLOQUE = N_BLOQUE
    AND CARGA_ID IN (SELECT CARGA_ID FROM CARGA WHERE SYSDATE BETWEEN F_INICIO AND F_FINAL)
    AND CARRERA_ID != ALUM_CARRERA_ID(MATRICULA)
    AND INSCRITO = 'S';

BEGIN
 OPEN C_HISTORIA;
 FETCH C_HISTORIA INTO P_CARRERA;
 IF NOT C_HISTORIA%FOUND THEN
    P_CARRERA := 'XXXXX';
 END IF;
 CLOSE C_HISTORIA;

 OPEN C_CAMBIA_CARRERA;
 FETCH C_CAMBIA_CARRERA INTO P_CODIGO;
 IF NOT C_CAMBIA_CARRERA%FOUND THEN
    P_CODIGO := 'XXXXXXX';
 END IF;
 CLOSE C_CAMBIA_CARRERA;
 
 IF P_CARRERA= 'XXXXX' OR P_CODIGO != 'XXXXXXX' THEN
    OPEN C_CARRERA;
    FETCH C_CARRERA INTO P_CARRERA;
    IF NOT C_CARRERA%FOUND THEN
       P_CARRERA := 'VACIO';
    END IF;
    CLOSE C_CARRERA;     
 END IF;
 
 RETURN( P_CARRERA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CARRERA_ID" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_CARRERA  VARCHAR2(5);
 CURSOR C_CARRERA IS
     SELECT
         B.CARRERA_ID
     FROM ALUM_PLAN A, MAPA_PLAN B
     WHERE A.CODIGO_PERSONAL = S_CODIGO
     AND A.ESTADO = '1'
     AND B.PLAN_ID = A.PLAN_ID;

BEGIN
 OPEN C_CARRERA;
 FETCH C_CARRERA INTO P_CARRERA;
 IF NOT C_CARRERA%FOUND THEN
    P_CARRERA := 'xxxxx';
 END IF;
 CLOSE C_CARRERA;
 RETURN( P_CARRERA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CICLO" (S_CODIGO IN VARCHAR2, S_PLAN_ID IN VARCHAR2) RETURN NUMBER IS
 P_CICLO  NUMBER(2);
 CURSOR C_CICLO IS
  SELECT CICLO FROM ALUM_PLAN WHERE CODIGO_PERSONAL = S_CODIGO AND PLAN_ID = S_PLAN_ID; 
BEGIN
 OPEN C_CICLO;
 FETCH C_CICLO INTO P_CICLO;
 IF NOT C_CICLO%FOUND THEN
    P_CICLO := 'VACIO';
 END IF;
 CLOSE C_CICLO;
 RETURN( P_CICLO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_COMIDAS" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2, BLOQUE IN NUMBER) RETURN NUMBER IS
 P_COMIDAS  NUMBER(3);
 
 CURSOR C_COMIDAS IS 
 	SELECT COALESCE(NUM_COMIDAS,0)
	FROM NOE.COM_AUTORIZACION
	WHERE MATRICULA = CODIGO
	AND CARGA_ID = CARGA
	AND BLOQUE = BLOQUE;

BEGIN
 OPEN C_COMIDAS;
 FETCH C_COMIDAS INTO P_COMIDAS;
 IF NOT C_COMIDAS%FOUND THEN
    P_COMIDAS := 0;
 END IF;
 CLOSE C_COMIDAS;
 RETURN( P_COMIDAS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_COSTO_CURSO" (PAR_MATRICULA IN VARCHAR2, PAR_CURSO_CARGA_ID IN VARCHAR2, PAR_CURSO_ID IN VARCHAR2) RETURN NUMBER IS
 P_COSTO  NUMBER(7,2);
 CURSOR C_COSTO IS
     SELECT
     COSTO_CURSO
     FROM MATEO.FES_CC_MATERIA
     WHERE MATRICULA = PAR_MATRICULA
     AND CURSO_CARGA_ID = PAR_CURSO_CARGA_ID
     AND CURSO_ID = PAR_CURSO_ID;
BEGIN
 OPEN C_COSTO;
 FETCH C_COSTO INTO P_COSTO;
 IF NOT C_COSTO%FOUND THEN
    P_COSTO := 0;
 END IF;
 CLOSE C_COSTO;
 RETURN( P_COSTO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CREDITOS" (CODIGO IN VARCHAR2, PLAN IN VARCHAR2) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS 
  SELECT 
   NVL(SUM(CREDITOS),0)
  FROM ALUMNO_CURSO 
  WHERE CODIGO_PERSONAL = CODIGO
  AND PLAN_ID = PLAN
  AND TIPOCAL_ID = '1';

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CREDITOS_INSC" (CODIGO IN VARCHAR2, PLAN IN VARCHAR2) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS 
  SELECT 
   NVL(SUM(CREDITOS),0)
  FROM ALUMNO_CURSO 
  WHERE CODIGO_PERSONAL = CODIGO
  AND PLAN_ID = PLAN
  AND TIPOCAL_ID = 'I';

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CREDITOS_PLAN" (CODIGO IN VARCHAR2, PLAN IN VARCHAR2) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS 
  SELECT 
   NVL(SUM(CREDITOS),0)
  FROM ALUMNO_CURSO 
  WHERE CODIGO_PERSONAL = CODIGO
  AND PLAN_ID = PLAN
  AND TIPOCAL_ID IN('I','1');

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CRED_CARGA" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS

SELECT 
    NVL(SUM(CREDITOS(CURSO_ID)),0) 
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND SUBSTR(CURSO_CARGA_ID, 1,6) = CARGA
  AND TIPO IN('O','A')
  AND TIPOCAL_ID != 'M';

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CRED_CARGA_MOD" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2, MODALIDAD IN NUMBER) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS

SELECT 
    COALESCE(SUM(CREDITOS(CURSO_ID)),0) 
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND SUBSTR(CURSO_CARGA_ID, 1,6) = CARGA
  AND GRUPO_MODALIDAD(CURSO_CARGA_ID) = MODALIDAD
  AND TIPO IN('O','A')
  AND TIPOCAL_ID != 'M';

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CRED_CARGA_MOD" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2, MODALIDAD IN NUMBER) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS

SELECT 
    COALESCE(SUM(CREDITOS(CURSO_ID)),0) 
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND SUBSTR(CURSO_CARGA_ID, 1,6) = CARGA
  AND GRUPO_MODALIDAD(CURSO_CARGA_ID) = MODALIDAD
  AND TIPO IN('O','A')
  AND TIPOCAL_ID != 'M';

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END; 
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CURSO_APROBADO" (CODIGO IN VARCHAR2, CURSOID IN VARCHAR2) RETURN VARCHAR2 IS
P_CURSO  CHAR(2);
 
 CURSOR C_APROBADO IS
  SELECT 'SI'
  FROM ALUMNO_CURSO 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND CURSO_ID = CURSOID
  AND TIPOCAL_ID = '1';   

BEGIN
 OPEN C_APROBADO;
 FETCH C_APROBADO INTO P_CURSO;
 IF NOT C_APROBADO%FOUND THEN
    P_CURSO := 'NO';
 END IF; 
 CLOSE C_APROBADO;    
 RETURN( P_CURSO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_CURSO_NOTA" (SCODIGO IN VARCHAR2, SCURSOCARGAID IN VARCHAR2) RETURN NUMBER IS
 P_NOTA  NUMBER(7,2);
 P_EXTRA NUMBER(7,2);
 P_PASE NUMBER(7,2);
 CURSOR C_NOTAS IS     
     SELECT NOTA, COALESCE(NOTA_EXTRA,0), ENOC.NOTA_APROBATORIA(CURSO_ID) FROM KRDX_CURSO_ACT WHERE CODIGO_PERSONAL = SCODIGO AND CURSO_CARGA_ID = SCURSOCARGAID;      
BEGIN
  OPEN C_NOTAS;
  FETCH C_NOTAS INTO P_NOTA,P_EXTRA,P_PASE;
  IF NOT C_NOTAS%FOUND THEN
    P_NOTA  := 0;
    P_EXTRA := 0;
    P_PASE := 0; 
  END IF; 
  CLOSE C_NOTAS;

  IF (P_NOTA < P_PASE) AND (P_EXTRA > 0) THEN
    P_NOTA := P_EXTRA;    
  END IF;    

  RETURN( P_NOTA );
END;
/


CREATE OR REPLACE FUNCTION "ENOC"."ALUM_DORMITORIO" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_DORMITORIO VARCHAR2(1);
 CURSOR C_DORMITORIO IS
     SELECT
     DORMITORIO
     FROM ALUM_ACADEMICO
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_DORMITORIO;
 FETCH C_DORMITORIO INTO P_DORMITORIO;
 IF NOT C_DORMITORIO%FOUND THEN
    P_DORMITORIO := '0';
 END IF;
 CLOSE C_DORMITORIO;
 RETURN( P_DORMITORIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_EVAL_CERO" (S_CODIGO VARCHAR2, S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_EVALUACION NUMBER(5);
 CURSOR C_EVALUACION IS
  SELECT
  	EVALUACION_ID
  FROM CARGA_GRUPO_EVALUACION 
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID
  AND EVALUACION_ID NOT IN 
	  (SELECT EVALUACION_ID FROM KRDX_ALUMNO_EVAL WHERE CODIGO_PERSONAL = S_CODIGO AND CURSO_CARGA_ID = S_CURSO_CARGA_ID);  

BEGIN
 OPEN C_EVALUACION;
 FETCH C_EVALUACION INTO P_EVALUACION;
 IF NOT C_EVALUACION%FOUND THEN
    P_EVALUACION := 0;
 END IF;
 CLOSE C_EVALUACION;
 RETURN( P_EVALUACION );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_FINSCRIPCION" (CODIGO IN VARCHAR2,CARGA IN VARCHAR2, BLOQUE IN NUMBER) RETURN DATE IS
 P_FECHA DATE;
 CURSOR C_INSCRITO IS
     SELECT
	   A.FECHA 
	 FROM MATEO.FES_CCOBRO A 
     WHERE A.MATRICULA = CODIGO
	 AND A.CARGA_ID = CARGA
	 AND A.BLOQUE = BLOQUE
	 AND A.INSCRITO = 'S';
BEGIN
 OPEN C_INSCRITO;
 FETCH C_INSCRITO INTO P_FECHA;
 IF NOT C_INSCRITO%FOUND THEN
    P_FECHA := TO_DATE('01/01/1950','DD/MM/YYYY');
 END IF;
 CLOSE C_INSCRITO;
 RETURN( P_FECHA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_GRUPO" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN CHAR IS
P_GRUPO VARCHAR2(2);
CURSOR C_GRUPO IS 
  SELECT GRUPO FROM CARGA_GRUPO
  WHERE CARGA_ID = CARGA 
  AND CURSO_CARGA_ID IN (SELECT CURSO_CARGA_ID FROM KRDX_CURSO_ACT WHERE CODIGO_PERSONAL = CODIGO AND TIPOCAL_ID IN ('I','1','2'))
  ORDER BY 1 DESC;
BEGIN
 OPEN C_GRUPO;
 FETCH C_GRUPO INTO P_GRUPO;
 IF NOT C_GRUPO%FOUND THEN
    P_GRUPO := 'X';
 END IF;
 CLOSE C_GRUPO;
 RETURN( P_GRUPO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_INGRESO_PLAN" (CODIGO IN VARCHAR2, PLAN IN VARCHAR2) RETURN VARCHAR2 IS
   P_INICIO VARCHAR2(10);
 CURSOR C_INICIO IS
     SELECT
        TO_CHAR(MIN(FECHA),'DD/MM/YYYY')
     FROM MATEO.FES_CCOBRO
     WHERE MATRICULA = CODIGO
     AND PLAN_ID = PLAN
     AND INSCRITO = 'S';
BEGIN
 OPEN C_INICIO;
 FETCH C_INICIO INTO P_INICIO;
 IF NOT C_INICIO%FOUND THEN
    P_INICIO := '01/01/2000';
 END IF;
 CLOSE C_INICIO;
 RETURN( P_INICIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_INGRESO_UM" (CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
   P_INICIO VARCHAR2(10);
 CURSOR C_INICIO IS
     SELECT
        TO_CHAR(MIN(FECHA),'DD/MM/YYYY')
     FROM MATEO.FES_CCOBRO
     WHERE MATRICULA = CODIGO     
     AND INSCRITO = 'S';
BEGIN
 OPEN C_INICIO;
 FETCH C_INICIO INTO P_INICIO;
 IF NOT C_INICIO%FOUND THEN
    P_INICIO := 0;
 END IF;
 CLOSE C_INICIO;
 RETURN( P_INICIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_INGRESO_UM_FORMAL" (CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
   P_INICIO VARCHAR2(10);
 CURSOR C_INICIO IS
     SELECT
        TO_CHAR(MIN(FECHA),'DD/MM/YYYY')
     FROM MATEO.FES_CCOBRO
     WHERE MATRICULA = CODIGO
     AND FACULTAD_ID != '110'
     AND INSCRITO = 'S';
BEGIN
 OPEN C_INICIO;
 FETCH C_INICIO INTO P_INICIO;
 IF NOT C_INICIO%FOUND THEN
    P_INICIO := 0;
 END IF;
 CLOSE C_INICIO;
 RETURN( P_INICIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_INICIO_PLAN" (CODIGO IN VARCHAR2, PLAN IN VARCHAR2) RETURN VARCHAR2 IS
 P_INICIO VARCHAR2(10);
 CURSOR C_INICIO IS
     SELECT
       TO_CHAR(MIN(F_EVALUACION),'DD/MM/YYYY')
     FROM ALUMNO_CURSO
     WHERE CODIGO_PERSONAL = CODIGO
	 AND PLAN_ID = PLAN;
BEGIN
 OPEN C_INICIO;
 FETCH C_INICIO INTO P_INICIO;
 IF NOT C_INICIO%FOUND THEN
    P_INICIO := 0;
 END IF;
 CLOSE C_INICIO;
 RETURN( P_INICIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_INSTITUCION" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2, BLOQUE IN NUMBER) RETURN NUMBER IS
  P_INSTITUCION NUMBER(3);
CURSOR C_CURSOR IS
  SELECT INSTITUCION_ID FROM NOE.ALUMNO_INSTITUCION WHERE CARGA_ID = CARGA AND MATRICULA = CODIGO AND BLOQUE_ID = BLOQUE;
BEGIN
 OPEN C_CURSOR;
 FETCH C_CURSOR into P_INSTITUCION;
 IF NOT C_CURSOR % FOUND THEN
    P_INSTITUCION := 0;
 END IF;
 CLOSE C_CURSOR;
 RETURN( P_INSTITUCION );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_MAT_ALTA" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_MATERIAS  NUMBER(5);
CURSOR C_MATERIAS IS
 
  SELECT 
    NVL(COUNT(CODIGO_PERSONAL),0) 
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND SUBSTR(CURSO_CARGA_ID, 1,6) = CARGA
  AND TIPO = 'A';

BEGIN
 OPEN C_MATERIAS;
 FETCH C_MATERIAS INTO P_MATERIAS;
 IF NOT C_MATERIAS%FOUND THEN
    P_MATERIAS := 0;
 END IF;
 CLOSE C_MATERIAS;
 RETURN( P_MATERIAS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_MAT_BAJA" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_MATERIAS  NUMBER(5);
CURSOR C_MATERIAS IS
 
  SELECT 
    NVL(COUNT(CODIGO_PERSONAL),0) 
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND SUBSTR(CURSO_CARGA_ID, 1,6) = CARGA
  AND TIPO = 'B';

BEGIN
 OPEN C_MATERIAS;
 FETCH C_MATERIAS INTO P_MATERIAS;
 IF NOT C_MATERIAS%FOUND THEN
    P_MATERIAS := 0;
 END IF;
 CLOSE C_MATERIAS;
 RETURN( P_MATERIAS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_MAT_ORI" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_MATERIAS  NUMBER(5);
CURSOR C_MATERIAS IS
 
  SELECT 
   NVL(COUNT(MATRICULA),0)
  FROM MATEO.FES_CC_MATERIA 
  WHERE MATRICULA = CODIGO
  AND CARGA_ID = CARGA
  AND MATRICULA IN 
     (SELECT MATRICULA FROM MATEO.FES_CCOBRO 
   WHERE MATRICULA = FES_CC_MATERIA.MATRICULA 
   AND INSCRITO = 'S'
   AND CARGA_ID = CARGA);

BEGIN
 OPEN C_MATERIAS;
 FETCH C_MATERIAS INTO P_MATERIAS;
 IF NOT C_MATERIAS%FOUND THEN
    P_MATERIAS := 0;
 END IF;
 CLOSE C_MATERIAS;
 RETURN( P_MATERIAS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_MODALIDAD_HISTORICA" (S_CODIGO IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN VARCHAR2 IS
P_MODALIDAD NUMBER(3);  
	 
 CURSOR C_HISTORIA IS
     SELECT
     MODALIDAD_ID
     FROM MATEO.FES_CCOBRO
     WHERE MATRICULA = S_CODIGO
	 AND CARGA_ID = S_CARGA
	 AND INSCRITO = 'S'; 
     
 CURSOR C_MODALIDAD IS
     SELECT MODALIDAD_ID
     FROM ALUM_ACADEMICO 
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_HISTORIA;
 FETCH C_HISTORIA INTO P_MODALIDAD;
 IF NOT C_HISTORIA%FOUND THEN
    P_MODALIDAD := 0;
 END IF;
 CLOSE C_HISTORIA;
 
 IF P_MODALIDAD= 0 THEN
    OPEN C_MODALIDAD;
    FETCH C_MODALIDAD INTO P_MODALIDAD;
    IF NOT C_MODALIDAD%FOUND THEN
       P_MODALIDAD := 0;	   
    END IF;
    CLOSE C_MODALIDAD;     
 END IF;
 
 RETURN( P_MODALIDAD );
END; 
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_MOD_CARGA" (S_CODIGO IN VARCHAR2, S_CARGA IN VARCHAR2) RETURN VARCHAR2 IS
 P_MODALIDAD VARCHAR2(20);
 CURSOR C_MODALIDAD IS
  SELECT
     MODALIDAD_ID
  FROM MATEO.FES_CCOBRO
  WHERE MATRICULA = S_CODIGO
  AND CARGA_ID = S_CARGA
  AND INSCRITO = 'S';
BEGIN
 OPEN C_MODALIDAD;
 FETCH C_MODALIDAD INTO P_MODALIDAD;
 IF NOT C_MODALIDAD%FOUND THEN
    P_MODALIDAD := 0;
 END IF;
 CLOSE C_MODALIDAD;
 RETURN( P_MODALIDAD );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_NOMBRES" (S_CODIGO_PERSONAL IN VARCHAR2) RETURN VARCHAR2 IS
 P_ALUMNO VARCHAR2(120);
 CURSOR C_ALUMNO IS
     SELECT NOMBRE FROM ALUM_PERSONAL WHERE CODIGO_PERSONAL = S_CODIGO_PERSONAL;
BEGIN
 OPEN C_ALUMNO;
 FETCH C_ALUMNO INTO P_ALUMNO;
 IF NOT C_ALUMNO%FOUND THEN 
    P_ALUMNO := 'VACIO'; 
 END IF;
 CLOSE C_ALUMNO;
 RETURN( P_ALUMNO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_NUM_MAT" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_MATERIAS  NUMBER(5);
CURSOR C_MATERIAS IS
 
  SELECT 
   NVL(COUNT(CURSO_CARGA_ID),0)
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO
  AND CURSO_CARGA_ID LIKE CARGA||'%'
  AND TIPOCAL_ID NOT IN ('M');

BEGIN
 OPEN C_MATERIAS;
 FETCH C_MATERIAS INTO P_MATERIAS;
 IF NOT C_MATERIAS%FOUND THEN
    P_MATERIAS := 0;
 END IF;
 CLOSE C_MATERIAS;
 RETURN( P_MATERIAS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PASO_MATERIA" (S_CODIGO_PERSONAL IN VARCHAR2, S_MATERIA IN VARCHAR2) RETURN CHAR IS
 P_PASO CHAR(1);
 CURSOR C_MATERIA IS
     SELECT 'S' FROM ALUMNO_CURSO
     WHERE CODIGO_PERSONAL = S_CODIGO_PERSONAL
	 AND CURSO_ID = S_MATERIA
	 AND TIPOCAL_ID = '1';

BEGIN
 OPEN C_MATERIA;
 FETCH C_MATERIA INTO P_PASO;
 IF NOT C_MATERIA%FOUND THEN
    P_PASO := 'N';
 END IF;
 CLOSE C_MATERIA;
 RETURN( P_PASO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PLAN_CARGA" (S_CODIGO IN VARCHAR2, S_CARGA IN VARCHAR2, S_BLOQUE IN NUMBER) RETURN VARCHAR2 IS
 P_PLAN  VARCHAR2(8);
 CURSOR C_PLAN IS
     SELECT COALESCE(PLAN_ID,'00000000') FROM ENOC.CARGA_ALUMNO WHERE CODIGO_PERSONAL = S_CODIGO AND CARGA_ID = S_CARGA AND BLOQUE_ID = S_BLOQUE;
BEGIN
 OPEN C_PLAN;
 FETCH C_PLAN INTO P_PLAN;
 IF NOT C_PLAN%FOUND THEN
    P_PLAN := '00000000';
 END IF;
 CLOSE C_PLAN;
 RETURN( P_PLAN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PLAN_CICLO" (S_CODIGO IN VARCHAR2, S_PLAN IN VARCHAR2) RETURN NUMBER IS   
   P_CREDITOS NUMBER(3);
   P_CONVALIDA NUMBER(3);
   P_CICLO NUMBER(2);
   P_RESTO NUMBER(3);
   
   CURSOR C_CREDITOS IS
      SELECT
      COALESCE(SUM(CREDITOS),0)
   FROM ALUMNO_CURSO
   WHERE CODIGO_PERSONAL = S_CODIGO
   AND TIPOCAL_ID IN ('1','I')
   AND SUBSTR(CURSO_ID,1,8) = S_PLAN; 
  
   CURSOR C_CONVALIDA IS 
      SELECT COALESCE(SUM(CREDITOS(CURSO_ID)),0) FROM CONV_MATERIA
      WHERE CONVALIDACION_ID IN 
        (SELECT CONVALIDACION_ID FROM CONV_EVENTO 
         WHERE CODIGO_PERSONAL = S_CODIGO
         AND PLAN_ID = S_PLAN
         AND ESTADO IN ('S','P','C','A','R','T'))
      AND CURSO_ID NOT IN 
         (SELECT CURSO_ID FROM ALUMNO_CURSO 
          WHERE CODIGO_PERSONAL = S_CODIGO
          AND PLAN_ID = S_PLAN 
          AND TIPOCAL_ID IN ('1','I'));
   
   CURSOR C_CICLO IS
      SELECT 
      CICLO, CREDITOS 
   FROM PLAN_CICLO 
   WHERE PLAN_ID = S_PLAN 
   AND CREDITOS != 0
   ORDER BY CICLO;
    
BEGIN
  P_CREDITOS:= 0; P_CICLO:= 1; P_CONVALIDA:= 0;

  OPEN C_CREDITOS;
  FETCH C_CREDITOS INTO P_CREDITOS;
  CLOSE C_CREDITOS;
  P_CREDITOS:= P_CREDITOS - 10;
  
  OPEN C_CONVALIDA;
  FETCH C_CONVALIDA INTO P_CONVALIDA;
  CLOSE C_CONVALIDA;
  
  P_CREDITOS:= P_CREDITOS + P_CONVALIDA;
  
  P_RESTO:= P_CREDITOS;
  
  FOR REGISTRO IN c_ciclo LOOP
     
     IF p_resto > REGISTRO.CREDITOS THEN
        p_resto:= p_resto - REGISTRO.CREDITOS;
        p_ciclo:= REGISTRO.CICLO + 1;   
     ELSE
        EXIT;
     END IF;     
  END LOOP;  
 
  RETURN( P_CICLO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PLAN_CICLO_POSTGRADO" (s_codigo in varchar2, s_plan in varchar2) RETURN Number IS
   P_CREDITOS Number(3);
   P_CONVALIDA NUMBER(3);
   P_CICLO Number(2); 
   
   CURSOR C_CREDITOS IS
      SELECT
      COALESCE(SUM(CREDITOS),0)
      FROM ALUMNO_CURSO
      WHERE CODIGO_PERSONAL = s_codigo
      AND TIPOCAL_ID IN ('1','I')
      AND SUBSTR(CURSO_ID,1,8) = s_plan;
      
      CURSOR C_CONVALIDA IS 
      SELECT COALESCE(SUM(CREDITOS(CURSO_ID)),0) FROM CONV_MATERIA
      WHERE CONVALIDACION_ID IN 
        (SELECT CONVALIDACION_ID FROM CONV_EVENTO 
         WHERE CODIGO_PERSONAL = S_CODIGO
         AND PLAN_ID = S_PLAN
         AND ESTADO IN ('S','P','C','A','R','T'))
      AND CURSO_ID NOT IN 
         (SELECT CURSO_ID FROM ALUMNO_CURSO 
          WHERE CODIGO_PERSONAL = S_CODIGO
          AND PLAN_ID = S_PLAN 
          AND TIPOCAL_ID IN ('1','I'));
    
BEGIN
  P_CREDITOS:= 0; P_CICLO:= 1;

  OPEN C_CREDITOS;
  FETCH C_CREDITOS INTO p_creditos;
  CLOSE C_creditos;
  
  OPEN C_CONVALIDA;
  FETCH C_CONVALIDA INTO P_CONVALIDA;
  CLOSE C_CONVALIDA;
  
  P_CREDITOS := P_CREDITOS + P_CONVALIDA;
  
  IF P_CREDITOS < 24 THEN
	P_CICLO:= 1;
  ELSE
	P_CICLO:= p_creditos/24;
  END IF;
  
  RETURN( P_CICLO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PLAN_HISTORICO" (S_CODIGO IN VARCHAR2,S_CARGA IN VARCHAR2, N_BLOQUE NUMBER) RETURN VARCHAR2 IS
 P_PLAN VARCHAR2(8);
 P_PLAN_CARGA VARCHAR(8);
 P_CODIGO VARCHAR2(7);
  
 CURSOR C_HISTORIA IS
     SELECT
     PLAN_ID 
     FROM MATEO.FES_CCOBRO
     WHERE MATRICULA = S_CODIGO 
     AND CARGA_ID = S_CARGA
     AND BLOQUE= N_BLOQUE;
 
 /* BUSCA EL PLAN DE ESTUDIOS DEL ALUMNO EN KRDX_CURSO_ACT CON S_CARGA */
 CURSOR C_PLAN_CARGA IS
     SELECT 
     DISTINCT(SELECT PLAN_ID FROM MAPA_CURSO WHERE CURSO_ID = KRDX_CURSO_ACT.CURSO_ID)
     FROM KRDX_CURSO_ACT
     WHERE CODIGO_PERSONAL = S_CODIGO
     AND CURSO_CARGA_ID LIKE S_CARGA||'%'
     AND TIPOCAL_ID IN('1','2','4','5','6')
     AND ROWNUM = 1;
     
 CURSOR C_PLAN IS
     SELECT PLAN_ID
     FROM ALUM_PLAN  
     WHERE CODIGO_PERSONAL = S_CODIGO
     AND ESTADO = '1';

 CURSOR C_CAMBIA_CARRERA IS
    SELECT MATRICULA FROM MATEO.FES_CCOBRO 
    WHERE MATRICULA = S_CODIGO
    AND CARGA_ID = S_CARGA
    AND BLOQUE = N_BLOQUE
    AND CARGA_ID IN (SELECT CARGA_ID FROM CARGA WHERE SYSDATE BETWEEN F_INICIO AND F_FINAL)
    AND CARRERA_ID != ALUM_CARRERA_ID(MATRICULA)
    AND INSCRITO = 'S';
BEGIN
 OPEN C_HISTORIA;
 FETCH C_HISTORIA INTO P_PLAN;
 IF NOT C_HISTORIA%FOUND THEN
    P_PLAN := 'XXXXXXXX';
 END IF;

 OPEN C_CAMBIA_CARRERA;
 FETCH C_CAMBIA_CARRERA INTO P_CODIGO;
 IF NOT C_CAMBIA_CARRERA%FOUND THEN
    P_CODIGO := 'XXXXXXX';
 END IF;
 
 OPEN C_PLAN_CARGA;
 FETCH C_PLAN_CARGA INTO P_PLAN_CARGA;
 IF NOT C_PLAN_CARGA%FOUND THEN
    P_PLAN_CARGA := 'XXXXXXXX';
 END IF;
 
 /* VERIFICA SI EL ALUMNO TIENE UN PLAN DE ESTUDIOS DIFERENTE EN LAS TABLAS ENOC.KRDX_CURSO_ACT Y MATEO.FES_CCOBRO */
 IF P_PLAN_CARGA != 'XXXXXXXX' AND P_PLAN != 'XXXXXXXX' AND P_PLAN != P_PLAN_CARGA THEN 
    P_PLAN := P_PLAN_CARGA;
 END IF;
 
 IF P_PLAN='XXXXXXXX' OR P_CODIGO != 'XXXXXXX' THEN
    OPEN C_PLAN;
    FETCH C_PLAN INTO P_PLAN;
    IF NOT C_PLAN%FOUND THEN
       P_PLAN := 'vacio';
    END IF;
    CLOSE C_PLAN;     
 END IF;
 
 RETURN( P_PLAN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PLAN_ID" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_PLAN  VARCHAR2(8);
 CURSOR C_PLAN IS
     SELECT
         PLAN_ID
     FROM ALUM_PLAN
     WHERE CODIGO_PERSONAL = S_CODIGO
     AND ESTADO = '1';

BEGIN
 OPEN C_PLAN;
 FETCH C_PLAN INTO P_PLAN;
 IF NOT C_PLAN%FOUND THEN
    P_PLAN := 'xxxxxxxx';
 END IF;
 CLOSE C_PLAN;
 RETURN( P_PLAN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PROMEDIO" (SCODIGO IN VARCHAR2, SPLAN IN VARCHAR2) RETURN NUMBER IS
 P_NOTA  NUMBER(7,2);
 SUMANOTAXCREDITO NUMBER(5);
 SUMACREDITOS  NUMBER(4);
 CURSOR C_PROMEDIO IS
    SELECT         
   NOTA_APROBATORIA, 
   CREDITOS,
   NOTA, 
   NOTA_EXTRA, 
   TIPOCAL_ID 
   FROM ALUMNO_CURSO 
   WHERE CODIGO_PERSONAL = SCODIGO
   AND PLAN_ID = SPLAN
   AND TIPOCAL_ID = '1'
   AND TIPOCURSO_ID(CURSO_ID) IN (SELECT TIPOCURSO_ID FROM ENOC.CAT_TIPOCURSO WHERE PROMEDIA = 'S')
   AND CREDITOS > 0
   AND CONVALIDACION IN ('N','I');
BEGIN 
 SUMANOTAXCREDITO:= 0; SUMACREDITOS:= 0; 
 
 FOR REGISTRO IN C_PROMEDIO LOOP
 
    SUMACREDITOS:= SUMACREDITOS + REGISTRO.CREDITOS;
    
    IF REGISTRO.NOTA < REGISTRO.NOTA_APROBATORIA THEN
       SUMANOTAXCREDITO:= SUMANOTAXCREDITO + (REGISTRO.CREDITOS*REGISTRO.NOTA_EXTRA);  
    ELSE
       SUMANOTAXCREDITO:= SUMANOTAXCREDITO + (REGISTRO.CREDITOS*REGISTRO.NOTA);
    END IF;
    
 END LOOP;
 IF SUMACREDITOS>0 THEN 
    P_NOTA:= SUMANOTAXCREDITO / SUMACREDITOS;
 ELSE
  P_NOTA := 0;
 END IF;
  
 RETURN( P_NOTA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PROMEDIO_CARGA" (SCODIGO IN VARCHAR2, CARGA IN VARCHAR2, SPLAN IN VARCHAR2) RETURN NUMBER IS
 P_NOTA  NUMBER(7,3);
 SUMANOTAXCREDITO NUMBER(5);
 SUMACREDITOS  NUMBER(4);
 CURSOR C_PROMEDIO IS
    SELECT         
   NOTA_APROBATORIA, 
   CREDITOS,
   NOTA, 
   NOTA_EXTRA, 
   TIPOCAL_ID 
   FROM ALUMNO_CURSO
   WHERE CODIGO_PERSONAL = SCODIGO
   AND CARGA_ID = CARGA
   AND TIPOCAL_ID = SOME('1','2','4','5','7','8')
   AND CREDITOS > 0
   AND CONVALIDACION IN ('N','I');
BEGIN 
 SUMANOTAXCREDITO:= 0; SUMACREDITOS:= 0; 
 
 FOR REGISTRO IN C_PROMEDIO LOOP
 
    SUMACREDITOS:= SUMACREDITOS + REGISTRO.CREDITOS;
    
    IF (REGISTRO.NOTA < REGISTRO.NOTA_APROBATORIA) AND (REGISTRO.NOTA_EXTRA>0) THEN
       SUMANOTAXCREDITO:= SUMANOTAXCREDITO + (REGISTRO.CREDITOS*REGISTRO.NOTA_EXTRA);
    ELSE
       SUMANOTAXCREDITO:= SUMANOTAXCREDITO + (REGISTRO.CREDITOS*REGISTRO.NOTA);
    END IF;
    
 END LOOP;
 IF SUMACREDITOS>0 THEN 
    P_NOTA:= SUMANOTAXCREDITO / SUMACREDITOS;
 ELSE
  P_NOTA := 0;
 END IF;
  
 RETURN( P_NOTA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PROMEDIO_CARGA_AC" (SCODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
 P_NOTA  NUMBER(7,3);
 SUMANOTAXCREDITO NUMBER(5);
 SUMACREDITOS  NUMBER(4);
 CURSOR C_PROMEDIO IS
    SELECT         
   NOTA_APROBATORIA, 
   CREDITOS,
   NOTA, 
   NOTA_EXTRA, 
   TIPOCAL_ID 
   FROM ALUMNO_CURSO
   WHERE CODIGO_PERSONAL = SCODIGO
   AND CARGA_ID = CARGA
   AND TIPOCAL_ID IN ('1')
   AND CREDITOS > 0
   AND CONVALIDACION IN ('N','I');
BEGIN 
 SUMANOTAXCREDITO:= 0; SUMACREDITOS:= 0; 

 FOR REGISTRO IN C_PROMEDIO LOOP

    SUMACREDITOS:= SUMACREDITOS + REGISTRO.CREDITOS;

    IF (REGISTRO.NOTA < REGISTRO.NOTA_APROBATORIA) AND (REGISTRO.NOTA_EXTRA>0) THEN
       SUMANOTAXCREDITO:= SUMANOTAXCREDITO + (REGISTRO.CREDITOS*REGISTRO.NOTA_EXTRA);
    ELSE
       SUMANOTAXCREDITO:= SUMANOTAXCREDITO + (REGISTRO.CREDITOS*REGISTRO.NOTA);
    END IF;

 END LOOP;
 IF SUMACREDITOS>0 THEN 
    P_NOTA:= SUMANOTAXCREDITO / SUMACREDITOS;
 ELSE
  P_NOTA := 0;
 END IF;

 RETURN( P_NOTA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_PROMEDIO_CREDITOS" (sCodigo in varchar2, sPlan in varchar2) RETURN Number IS
 p_promedio  number(5,2);
 p_creditos_alumno number(3);
 p_creditos_plan number(3);
 CURSOR c_promedio IS
        SELECT SUM(CREDITOS) AS CREDITOS FROM ALUMNO_CURSO 
     WHERE CODIGO_PERSONAL = sCodigo
     AND PLAN_ID = sPlan
     AND TIPOCAL_ID = '1';
     
 CURSOR c_creditos IS
     SELECT CREDITOS_PLAN(sPlan) FROM ALUM_PERSONAL
     WHERE CODIGO_PERSONAL = sCodigo;
BEGIN 
 open c_promedio;
 fetch c_promedio into p_creditos_alumno;
 IF NOT c_promedio%FOUND THEN
    p_creditos_alumno := 0;
 end if;
 close c_promedio;
 
 open c_creditos;
 fetch c_creditos into p_creditos_plan;
 if not c_creditos%found then
    p_creditos_plan := 0;
 end if;
 close c_creditos;
 
 if p_creditos_alumno > 0 and p_creditos_plan > 0 then
  p_promedio := (p_creditos_alumno * 100) / p_creditos_plan;
 else
  p_promedio := 0;
 end if;
 RETURN( p_promedio );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_RESIDENCIA" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_RESIDENCIA VARCHAR2(1);
 CURSOR C_RESIDENCIA IS
     SELECT
     RESIDENCIA_ID
     FROM ALUM_ACADEMICO
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_RESIDENCIA;
 FETCH C_RESIDENCIA INTO P_RESIDENCIA;
 IF NOT C_RESIDENCIA%FOUND THEN
    P_RESIDENCIA := '0';
 END IF;
 CLOSE C_RESIDENCIA;
 RETURN( P_RESIDENCIA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_RESIDENCIA_HISTORICA" (S_CODIGO IN VARCHAR2,CARGA IN VARCHAR2) RETURN VARCHAR2 IS
 P_RESIDENCIA VARCHAR2(1);
 CURSOR C_RESIDENCIA IS
     SELECT
     RESIDENCIA
     FROM MATEO.FES_CCOBRO
     WHERE MATRICULA = S_CODIGO
	 AND CARGA_ID = CARGA
	 AND INSCRITO = 'S';
BEGIN
 OPEN C_RESIDENCIA;
 FETCH C_RESIDENCIA INTO P_RESIDENCIA;
 IF NOT C_RESIDENCIA%FOUND THEN
    P_RESIDENCIA := '0';
 END IF;
 CLOSE C_RESIDENCIA;
 RETURN( P_RESIDENCIA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_SALDO2" (CODIGO IN VARCHAR2, EJERCICIO IN VARCHAR2) RETURN FLOAT IS
P_SALDO FLOAT;
 CURSOR C_SALDO IS 
  SELECT SUM((IMPORTE)*DECODE(CM.NATURALEZA,'D',-1,1)) AS IMPORTE 
  FROM MATEO.CONT_MOVIMIENTO CM, MATEO.CONT_POLIZA CP 
  WHERE CM.ID_AUXILIARM = CODIGO
  AND CM.ID_CTAMAYORM IN('1.1.04.01','1.1.04.29','1.1.04.30')
  AND CM.ID_EJERCICIO = EJERCICIO 
  AND CP.ID_LIBRO = CM.ID_LIBRO 
  AND CP.FOLIO = CM.FOLIO 
  AND CP.ID_EJERCICIO = CM.ID_EJERCICIO  
  AND CP.ID_CCOSTO = CM.ID_CCOSTO;
BEGIN
 OPEN C_SALDO;
 FETCH C_SALDO INTO P_SALDO;
 IF NOT C_SALDO%FOUND THEN
    P_SALDO := 0;
 END IF;
 CLOSE C_SALDO;
 RETURN( P_SALDO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_SEMESTRE_HISTORICO" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS   
   P_SEMESTRE NUMBER(3);   
   
   CURSOR C_SEMESTRE IS 
        SELECT 
		  DISTINCT(SEMESTRE) AS GRADO 
		FROM MATEO.FES_CCOBRO 
		WHERE MATRICULA = CODIGO AND CARGA_ID = CARGA;  
BEGIN
  OPEN C_SEMESTRE;
  FETCH C_SEMESTRE INTO P_SEMESTRE;
  IF NOT C_SEMESTRE%FOUND THEN
    P_SEMESTRE := 0;
  END IF;
  CLOSE C_SEMESTRE;
  
  RETURN( P_SEMESTRE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_TIPOALUMNO" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_TIPO  VARCHAR2(20);
 CURSOR C_TIPOALUMNO IS
     SELECT
        CTA.NOMBRE_TIPO
     FROM ALUM_ACADEMICO AC, CAT_TIPOALUMNO CTA
     WHERE AC.CODIGO_PERSONAL = S_CODIGO
    AND CTA.TIPO_ID = AC.TIPO_ALUMNO;
BEGIN
 OPEN C_TIPOALUMNO;
 FETCH C_TIPOALUMNO INTO P_TIPO;
 IF NOT C_TIPOALUMNO%FOUND THEN
    P_TIPO := 'VACIO';
 END IF;
 CLOSE C_TIPOALUMNO;
 RETURN( P_TIPO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_TIPOHISTORICO" (S_CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
  P_TIPO NUMBER(2);
  CURSOR C_TIPO IS
     SELECT
     TALUMNO_ID
     FROM MATEO.FES_CCOBRO
     WHERE MATRICULA = S_CODIGO
	 AND CARGA_ID = CARGA
	 AND INSCRITO = 'S';
BEGIN
 OPEN C_TIPO;
 FETCH C_TIPO INTO P_TIPO;
 IF NOT C_TIPO%FOUND THEN
    P_TIPO := 0;
 END IF;
 CLOSE C_TIPO;
 RETURN( P_TIPO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUM_TIPOID" (S_CODIGO IN VARCHAR2) RETURN NUMBER IS
 P_TIPO  NUMBER(2);
 CURSOR C_TIPOALUMNO IS
     SELECT
       TIPO_ALUMNO
     FROM ALUM_ACADEMICO
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
 OPEN C_TIPOALUMNO;
 FETCH C_TIPOALUMNO INTO P_TIPO;
 IF NOT C_TIPOALUMNO%FOUND THEN
    P_TIPO := 0;
 END IF;
 CLOSE C_TIPOALUMNO;
 RETURN( P_TIPO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ARON_PAIS_NOMBRE" (CIUDAD IN VARCHAR2) RETURN VARCHAR2 IS
   P_PAIS VARCHAR2(100);
   CURSOR C_PAIS IS
    SELECT 
	  NOMBRE 
	FROM ARON.PAIS 
	WHERE ID = 
		   (SELECT ID_PAIS 
		   FROM ARON.ESTADO 
		   WHERE ID = 
		          (SELECT C.ID_ESTADO FROM ARON.CIUDAD C WHERE ID = CIUDAD));
BEGIN
 OPEN C_PAIS;
 FETCH C_PAIS INTO P_PAIS;
 IF NOT C_PAIS%FOUND THEN
    P_PAIS:= 'vacio';
 END IF;
 CLOSE C_PAIS;
 RETURN( P_PAIS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."BAJAS_CARR" (S_CARR in varchar2, S_CARGA in varchar2) RETURN Number IS
 P_INSCRITOS  NUMBER(5);
 
 CURSOR C_INSCRITOS IS
 SELECT COUNT(DISTINCT(CODIGO_PERSONAL)) AS TOTAL 
 FROM ALUM_ESTADO 
 WHERE CARGA_ID = S_CARGA
 AND ALUM_CARRERA_ID(CODIGO_PERSONAL) = S_CARR
 AND ESTADO = '3';
BEGIN
 open C_INSCRITOS;
 fetch C_INSCRITOS into P_INSCRITOS;
 if not C_INSCRITOS%found then
    P_INSCRITOS := 0;
 end if;
 close C_INSCRITOS;
 RETURN( P_INSCRITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."BAJAS_FAC" (S_FAC IN VARCHAR2, S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_INSCRITOS  NUMBER(5);
 
 CURSOR C_INSCRITOS IS
 SELECT COUNT(DISTINCT(CODIGO_PERSONAL)) AS TOTAL 
 FROM ALUM_ESTADO 
 WHERE CARGA_ID = S_CARGA
 AND FACULTAD(ALUM_CARRERA_ID(CODIGO_PERSONAL))= S_FAC
 AND ESTADO = '3';
BEGIN
 OPEN C_INSCRITOS;
 FETCH C_INSCRITOS INTO P_INSCRITOS;
 IF NOT C_INSCRITOS%FOUND THEN
    P_INSCRITOS := 0;
 END IF;
 CLOSE C_INSCRITOS;
 RETURN( P_INSCRITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."BEC_TIPO_ACUERDO" (EJERCICIOID VARCHAR2, TIPOID IN NUMBER) RETURN VARCHAR2 IS
 P_NOMBRE VARCHAR2(1);
 CURSOR C_TIPO IS
   SELECT ACUERDO FROM ENOC.BEC_TIPO WHERE ID_EJERCICIO = EJERCICIOID AND TIPO = TIPOID;
BEGIN
 OPEN C_TIPO;
 FETCH C_TIPO INTO P_NOMBRE;
 IF NOT C_TIPO%FOUND THEN
    P_NOMBRE := 'X';
 END IF;
 CLOSE C_TIPO;
 RETURN( P_NOMBRE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."BEC_TIPO_NOMBRE" (EJERCICIOID VARCHAR2, TIPOID IN NUMBER) RETURN VARCHAR2 IS
 P_NOMBRE VARCHAR2(70);
 CURSOR C_TIPO IS
  SELECT NOMBRE FROM BEC_TIPO WHERE ID_EJERCICIO = EJERCICIOID AND TIPO = TIPOID;
BEGIN
 OPEN C_TIPO;
 FETCH C_TIPO INTO P_NOMBRE;
 IF NOT C_TIPO%FOUND THEN
    P_NOMBRE := 0;
 END IF;
 CLOSE C_TIPO;
 RETURN( P_NOMBRE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CANDIDATO_NOMBRE" (PAR_EVENTO IN NUMBER, PAR_CANDIDATO in NUMBER) RETURN varchar2 IS
 P_CANDIDATO varchar2(70);
 CURSOR C_CANDIDATO IS
     SELECT CANDIDATO_NOMBRE FROM ENOC.VOTO_CANDIDATO
     WHERE EVENTO_ID = PAR_EVENTO AND CANDIDATO_ID = PAR_CANDIDATO;
BEGIN
 open C_CANDIDATO;
 fetch C_CANDIDATO into P_CANDIDATO;
 if not C_CANDIDATO%found then
    P_CANDIDATO := 'Vacio';
 end if;
 close C_CANDIDATO;
 RETURN( P_CANDIDATO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CARGA_DEL_GRUPO" (S_CURSO_CARGA_ID in varchar2) RETURN varchar2 IS
 P_CARGA varchar2(6);
 CURSOR C_CARGA IS
  SELECT CARGA_ID FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;

BEGIN
 open C_CARGA;
 fetch C_CARGA into P_CARGA;
 if not C_CARGA%found then
    P_CARGA := 'vacio';
 end if;
 close C_CARGA;
 RETURN( P_CARGA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CARGA_NOMBRE" (S_CARGA IN VARCHAR2) RETURN VARCHAR2 IS
 P_CARGA  VARCHAR2(40);
 CURSOR C_CARGA IS
     SELECT
     NOMBRE_CARGA
     FROM CARGA
     WHERE CARGA_ID = S_CARGA;
BEGIN
 OPEN C_CARGA;
 FETCH C_CARGA INTO P_CARGA;
 IF NOT C_CARGA%FOUND THEN
    P_CARGA := 'Vacio';
 END IF;
 CLOSE C_CARGA;
 RETURN( P_CARGA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CARGA_PRIORIDAD" (PAR_CARGA IN VARCHAR2) RETURN NUMBER IS
 VAL_PRIORIDAD  NUMBER(2);
 CURSOR COMANDO IS SELECT PRIORIDAD FROM ENOC.CARGA WHERE CARGA_ID = PAR_CARGA;
BEGIN
 OPEN COMANDO;
 FETCH COMANDO INTO VAL_PRIORIDAD;
 IF NOT COMANDO%FOUND THEN
    VAL_PRIORIDAD := 99;
 END IF;
 CLOSE COMANDO;
 RETURN( VAL_PRIORIDAD);
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CARRERA" (S_PLAN IN VARCHAR2) RETURN VARCHAR2 IS
 P_CARRERA  VARCHAR2(5);
 CURSOR C_CARRERA IS
     SELECT CARRERA_ID FROM MAPA_PLAN WHERE PLAN_ID = S_PLAN;
BEGIN
 OPEN C_CARRERA;
 FETCH C_CARRERA INTO P_CARRERA;
 IF NOT C_CARRERA%FOUND THEN
    P_CARRERA := 'xxxxx';
 END IF;
 CLOSE C_CARRERA;
 RETURN( P_CARRERA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CATEGORIA_NOMBRE" (S_CATEGORIA IN VARCHAR2) RETURN VARCHAR2 IS
 P_CATEGORIA  VARCHAR2(70);
 CURSOR C_CATEGORIA IS
     SELECT
     CATEGORIA_NOMBRE
     FROM BEC_CATEGORIA
     WHERE CATEGORIA_ID = S_CATEGORIA;
BEGIN
 OPEN C_CATEGORIA;
 FETCH C_CATEGORIA INTO P_CATEGORIA;
 IF NOT C_CATEGORIA%FOUND THEN
    P_CATEGORIA := 'Vacio';
 END IF;
 CLOSE C_CATEGORIA;
 RETURN( P_CATEGORIA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CICLO_CREDITOS" (S_PLAN IN VARCHAR2, S_CICLO IN NUMBER) RETURN NUMBER IS
 P_CREDITOS  NUMBER(3);
 CURSOR C_CREDITOS IS
    SELECT SUM(CREDITOS) FROM MAPA_CURSO 
    WHERE PLAN_ID = S_PLAN 
    AND CICLO = S_CICLO;
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CICLO_CURSO" (S_CURSO IN VARCHAR2) RETURN Number IS
 P_CICLO  NUMBER(2);
 CURSOR C_CICLO IS
    SELECT CICLO FROM MAPA_CURSO
    WHERE CURSO_ID = S_CURSO;
BEGIN
 open C_CICLO;
 fetch C_CICLO into P_CICLO;
 if not C_CICLO%found then
    P_CICLO := 0;
 end if;
 close C_CICLO;
 RETURN( P_CICLO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CLAVE" ( CODIGO IN VARCHAR2 ) RETURN VARCHAR2 IS
 P_CLAVE VARCHAR2(100);
 
 CURSOR C_CLAVE IS
   SELECT CLAVE FROM ACCESO WHERE CODIGO_PERSONAL = CODIGO;
BEGIN
 OPEN C_CLAVE;
 FETCH C_CLAVE INTO P_CLAVE;
 IF NOT C_CLAVE%FOUND THEN
    P_CLAVE := 'NO EXISTE';
 END IF;
 CLOSE C_CLAVE;
 RETURN( P_CLAVE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."COORDINADOR_CARRERA" (S_CARRERA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_CARRERA  VARCHAR2(80);
 CURSOR C_CARRERA IS
     SELECT
        EMP_NOMBRE(CODIGO_PERSONAL)
     FROM CAT_CARRERA
     WHERE CARRERA_ID = S_CARRERA_ID;

BEGIN
 OPEN C_CARRERA;
 FETCH C_CARRERA INTO P_CARRERA;
 IF NOT C_CARRERA%FOUND THEN
    P_CARRERA := 'xxxxx';
 END IF;
 CLOSE C_CARRERA;
 RETURN( P_CARRERA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CREDITOS" (s_materia in varchar2) RETURN Number IS
 p_creditos  number(3);
 CURSOR c_creditos IS
     select
     creditos
     from mapa_curso
     where curso_id = s_materia;
BEGIN
 open c_creditos;
 fetch c_creditos into p_creditos;
 if not c_creditos%found then
    p_creditos := 0;
 end if;
 close c_creditos;
 RETURN( p_creditos );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CREDITOS_CARR" (S_CARR IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5); 
 P_CREDITOS_COMP NUMBER(5);
 
 CURSOR C_CREDITOS IS
     SELECT SUM(CREDITOS(CURSO_ID))
   FROM KRDX_CURSO_ACT
   WHERE ALUM_CARRERA_ID(CODIGO_PERSONAL)= S_CARR
      AND SUBSTR(CURSO_CARGA_ID,1,6)= S_CARGA
      AND TIPOCAL_ID != 'M' AND TIPOCAL_ID != '3';
      
 CURSOR C_CRED_COMP IS
     SELECT NVL(SUM(CREDITOS),0) 
     FROM MATEO.FES_CC_MATERIA 
     WHERE CARGA_ID = S_CARGA
     AND CARRERA_ID = S_CARR 
     AND MATRICULA IN (
         SELECT MATRICULA FROM MATEO.FES_CCOBRO
      WHERE CARGA_ID = S_CARGA 
      AND INSCRITO = 'S')
     AND CURSO_ID IN (
         SELECT CURSO_ID FROM MAPA_CURSO WHERE TIPOCURSO_ID=3); 
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 
 OPEN C_CRED_COMP;
 FETCH C_CRED_COMP INTO P_CREDITOS_COMP;
 IF NOT C_CRED_COMP%FOUND THEN
    P_CREDITOS_COMP := 0;
 END IF; 
 CLOSE C_CRED_COMP;
 
 P_CREDITOS:= P_CREDITOS + P_CREDITOS_COMP;
 
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CREDITOS_CARR_MOD" (S_CARR IN VARCHAR2,S_CARGA IN VARCHAR2, S_MOD IN NUMBER) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5); 
 P_CREDITOS_COMP NUMBER(5);
 
 CURSOR C_CREDITOS IS
     SELECT SUM(CREDITOS(CURSO_ID))
   FROM KRDX_CURSO_ACT
   WHERE ALUM_CARRERA_ID(CODIGO_PERSONAL)= S_CARR
      AND SUBSTR(CURSO_CARGA_ID,1,6)= S_CARGA
      AND TIPOCAL_ID != 'M' AND TIPOCAL_ID != '3'
      AND ALUM_MOD_CARGA(CODIGO_PERSONAL,S_CARGA)= S_MOD;
      
 CURSOR C_CRED_COMP IS
     SELECT NVL(SUM(CREDITOS),0) 
     FROM MATEO.FES_CC_MATERIA 
     WHERE CARGA_ID = S_CARGA
     AND CARRERA_ID = S_CARR 
     AND MATRICULA IN (
         SELECT MATRICULA FROM MATEO.FES_CCOBRO
      WHERE CARGA_ID = S_CARGA
      AND MODALIDAD_ID = S_MOD 
      AND INSCRITO = 'S')
     AND CURSO_ID IN (
         SELECT CURSO_ID FROM MAPA_CURSO WHERE TIPOCURSO_ID=3); 
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 
 OPEN C_CRED_COMP;
 FETCH C_CRED_COMP INTO P_CREDITOS_COMP;
 IF NOT C_CRED_COMP%FOUND THEN
    P_CREDITOS_COMP := 0;
 END IF; 
 CLOSE C_CRED_COMP;
 
 P_CREDITOS:= P_CREDITOS + P_CREDITOS_COMP;
 
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CREDITOS_FAC" (s_fac in varchar2,s_carga in varchar2) RETURN Number IS
 p_creditos  number(5);
 p_creditos_comp number(5);
 
 CURSOR c_creditos IS
     Select sum(creditos(curso_id))
   from krdx_curso_act
   Where alumno_fac_id(codigo_personal)= s_fac
      and substr(curso_carga_id,1,6)= s_carga
      and tipocal_id != 'M' and tipocal_id != '3';
      
 CURSOR C_CRED_COMP IS
     SELECT NVL(SUM(CREDITOS), 0)
     FROM MATEO.FES_CC_MATERIA 
     WHERE CARGA_ID = S_CARGA
     AND FACULTAD_ID = S_FAC 
     AND MATRICULA IN (
         SELECT MATRICULA FROM MATEO.FES_CCOBRO
      WHERE CARGA_ID = S_CARGA 
      AND INSCRITO = 'S')
     AND CURSO_ID IN (
         SELECT CURSO_ID FROM MAPA_CURSO WHERE TIPOCURSO_ID=3);
 
           
BEGIN
 open c_creditos;
 fetch c_creditos into p_creditos;
 if not c_creditos%found then
    p_creditos := 0;
 end if;
 close c_creditos;
 
 open C_CRED_COMP;
 fetch C_CRED_COMP into p_creditos_comp;
 if not C_CRED_COMP%found then
    p_creditos_comp := 0;
 end if; 
 close C_CRED_COMP;
 
 p_creditos:= p_creditos + p_creditos_comp;
 
 RETURN( p_creditos );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CREDITOS_PLAN_CICLO" (s_plan in varchar2, S_CICLO IN NUMBER) RETURN Number IS
 p_creditos  number(3);
 CURSOR c_creditos IS
    SELECT COALESCE(SUM(CREDITOS),0) FROM MAPA_AVANCE
    WHERE PLAN_ID = s_plan
    AND CICLO = S_CICLO;
BEGIN
 open c_creditos;
 fetch c_creditos into p_creditos;
 if not c_creditos%found then
    p_creditos := 0;
 end if;
 close c_creditos;
 RETURN( p_creditos );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CRED_ALUM_ALTA" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS
 
  SELECT 
    NVL(SUM(CREDITOS(CURSO_ID)),0) 
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND SUBSTR(CURSO_CARGA_ID, 1,6) = CARGA
  AND TIPO = 'A'
  AND TIPOCAL_ID != 'M';

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CRED_ALUM_BAJA" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS
 
  SELECT 
    NVL(SUM(CREDITOS(CURSO_ID)),0) 
  FROM KRDX_CURSO_ACT 
  WHERE CODIGO_PERSONAL = CODIGO 
  AND SUBSTR(CURSO_CARGA_ID, 1,6) = CARGA
  AND ( TIPO = 'B' OR TIPOCAL_ID = '3')
  AND TIPOCAL_ID != 'M';

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CRED_ALUM_MAT" (CODIGO IN VARCHAR2, CARGA IN VARCHAR2) RETURN NUMBER IS
P_CREDITOS  NUMBER(5);
CURSOR C_CREDITOS IS
 
  SELECT 
   NVL(SUM(CREDITOS),0)
  FROM MATEO.FES_CC_MATERIA 
  WHERE MATRICULA = CODIGO
  AND CARGA_ID = CARGA
  AND MATRICULA IN 
     (SELECT MATRICULA FROM MATEO.FES_CCOBRO 
   WHERE MATRICULA = MATEO.FES_CC_MATERIA.MATRICULA 
   AND INSCRITO = 'S'
   AND CARGA_ID = CARGA);

BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CRED_CICLO_TIPO" (S_PLAN IN VARCHAR2, S_CICLO IN NUMBER, TIPO IN NUMBER) RETURN NUMBER IS
  P_CREDITOS  NUMBER(3);
CURSOR C_CREDITOS IS
   SELECT 
     NVL(SUM(CREDITOS),0) FROM MAPA_CURSO 
   WHERE PLAN_ID = S_PLAN 
   AND CICLO = S_CICLO
   AND TIPOCURSO_ID = TIPO;
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CURSO_APTITUD" (PAR_CODIGO IN VARCHAR2, PAR_FECHA IN DATE) RETURN VARCHAR2 IS
VAL_CURSO VARCHAR2(11);
CURSOR C_CURSO IS 
  SELECT COALESCE(CURSO_CARGA_ID,'0') FROM ENOC.ALUMNO_CURSO 
  WHERE CODIGO_PERSONAL =  PAR_CODIGO
  AND SUBSTR(CURSO_ID,9,7) IN ('COSM191','COSM192','COSM293','COSM294','COSM395','COSM396','FGAF133','FGAF134','FGAF233','FGAF234','FGAF333','FGAF334')
  AND CARGA_ID IN (SELECT CARGA_ID FROM ENOC.CARGA WHERE PAR_FECHA BETWEEN F_INICIO AND F_FINAL);
BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO VAL_CURSO;
 IF NOT C_CURSO%FOUND THEN
    VAL_CURSO := '0';
 END IF;
 CLOSE C_CURSO;
 RETURN( VAL_CURSO );
END; 
/

CREATE OR REPLACE FUNCTION "ENOC"."CURSO_CARGA_MAESTRO" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_CURSO VARCHAR2(120);
 CURSOR C_CURSO IS
  SELECT CODIGO_PERSONAL FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;
BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_CURSO;
 IF NOT C_CURSO%FOUND THEN
    P_CURSO := 'vacio';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_CURSO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CURSO_CICLO" (S_CURSO IN VARCHAR2) RETURN NUMBER IS
 P_CICLO NUMBER(2);
 CURSOR C_CURSO IS
     SELECT
        CICLO
     FROM MAPA_CURSO
     WHERE CURSO_ID = S_CURSO;
BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_CICLO;
 IF NOT C_CURSO%FOUND THEN
    P_CICLO := 0;
 END IF;
 CLOSE C_CURSO;
 RETURN( P_CICLO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CURSO_CLAVE" (S_CURSO IN VARCHAR2) RETURN VARCHAR2 IS
 P_CURSO VARCHAR2(10);
 CURSOR C_CURSO IS
     SELECT
        CURSO_CLAVE
     FROM MAPA_CURSO
     WHERE CURSO_ID = S_CURSO;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_CURSO;
 IF NOT C_CURSO%FOUND THEN
    P_CURSO := 'vacio';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_CURSO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CURSO_NOMBRE" (S_CURSO IN VARCHAR2) RETURN VARCHAR2 IS
 P_CURSO VARCHAR2(120);
 CURSOR C_CURSO IS
     SELECT
        NOMBRE_CURSO
     FROM MAPA_CURSO
     WHERE CURSO_ID = S_CURSO;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_CURSO;
 IF NOT C_CURSO%FOUND THEN
    P_CURSO := 'vacio';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_CURSO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CURSO_NOTA_AP" (S_CURSO IN VARCHAR2) RETURN NUMBER IS
 P_NOTA NUMBER(3);
 CURSOR C_NOTA IS
     SELECT
        NOTA_APROBATORIA
     FROM MAPA_CURSO
     WHERE CURSO_ID = S_CURSO;

BEGIN
 OPEN C_NOTA;
 FETCH C_NOTA INTO P_NOTA;
 IF NOT C_NOTA%FOUND THEN
    P_NOTA := 0;
 END IF;
 CLOSE C_NOTA;
 RETURN( P_NOTA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."CURSO_PLAN" (s_curso in varchar2) RETURN varchar2 IS
 P_CURSO VARCHAR2(120);
 CURSOR c_curso IS
     SELECT TRIM(PLAN_ID) FROM MAPA_CURSO WHERE CURSO_ID = s_curso;
BEGIN
 open c_curso;
 fetch c_curso into p_curso;
 if not c_curso%found then
    p_curso := 'vacio';
 end if;
 close c_curso;
 RETURN( p_curso );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."DIAS_ENTRE_FECHAS" (p_fecini DATE, p_fecfin DATE) RETURN NUMBER IS
  NUMDIAS  NUMBER := 0;
BEGIN   
    /* Calcular los días que hay entre dos fechas */
    SELECT TRUNC ( p_fecfin ) - ADD_MONTHS ( TRUNC ( p_fecini ), FLOOR ( MONTHS_BETWEEN ( TRUNC ( p_fecfin ), TRUNC ( p_fecini ) ) ) ) + 1 INTO NUMDIAS FROM DUAL;
RETURN NUMDIAS;
EXCEPTION WHEN OTHERS THEN RETURN 0;

END DIAS_ENTRE_FECHAS;
/

CREATE OR REPLACE FUNCTION "ENOC"."DOC_ORDEN" (S_IDDOCUMENTO IN NUMBER) RETURN NUMBER IS
 P_ORDEN NUMBER(4,1);
 CURSOR C_ORDEN IS
     SELECT ORDEN
     FROM ENOC.ARCH_DOCUMENTOS
     WHERE IDDOCUMENTO = S_IDDOCUMENTO;
BEGIN
 OPEN C_ORDEN;
 FETCH C_ORDEN INTO P_ORDEN;
 IF NOT C_ORDEN%FOUND THEN
    P_ORDEN := 0;
 END IF;
 CLOSE C_ORDEN;
 RETURN( P_ORDEN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EDIFICIO_SALON" (S_SALON IN VARCHAR2) RETURN VARCHAR2 IS
 P_EDIFICIO VARCHAR2(2);
 CURSOR C_EDIFICIO IS
     SELECT EDIFICIO_ID FROM ENOC.CAT_SALON WHERE SALON_ID = S_SALON;
BEGIN
 OPEN C_EDIFICIO;
 FETCH C_EDIFICIO INTO P_EDIFICIO;
 IF NOT C_EDIFICIO%FOUND THEN
    P_EDIFICIO := '0';
 END IF;
 CLOSE C_EDIFICIO;
 RETURN( P_EDIFICIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_ANTIGUEDAD" (S_ID IN VARCHAR2) RETURN NUMBER IS
   P_YEARS1     NUMBER(7,2);
   P_YEARS2     NUMBER(7,2);
   P_ANTIGUEDAD NUMBER(7,2);

   CURSOR C_ANTERIOR IS
     SELECT ANTIGUEDAD_BASE FROM ARON.EMPLEADOLABORALES
     WHERE ID = S_ID
     AND ANTIGUEDAD_BASE > -1;

   CURSOR C_ACTUALES IS
     SELECT (MONTHS_BETWEEN(SYSDATE,FECHA_ANTIGUEDAD_BASE)/12)
     FROM ARON.EMPLEADOLABORALES
     WHERE ID = S_ID;
BEGIN
  OPEN C_ANTERIOR;
  FETCH C_ANTERIOR INTO P_YEARS1;
  IF NOT C_ANTERIOR%FOUND THEN
    P_YEARS1 := -1;
  END IF;
  CLOSE C_ANTERIOR;

  OPEN C_ACTUALES;
  FETCH C_ACTUALES INTO P_YEARS2;
  IF NOT C_ACTUALES % FOUND THEN
    P_YEARS2 := 0;
  END IF;
  CLOSE C_ACTUALES;

  IF P_YEARS1 > -1 THEN
    P_ANTIGUEDAD := P_YEARS1+P_YEARS2;
  ELSE
    P_ANTIGUEDAD := 0;
  END IF;

  RETURN( P_ANTIGUEDAD ); 
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_APELLIDO" (S_CODIGO_PERSONAL IN VARCHAR2) RETURN VARCHAR2 IS
 P_EMPLEADO VARCHAR2(120);
 CURSOR C_EMPLEADO IS
     SELECT
        APELLIDO_PATERNO||' '||APELLIDO_MATERNO||', '||NOMBRE
     FROM MAESTROS
     WHERE CODIGO_PERSONAL = S_CODIGO_PERSONAL;

BEGIN
 OPEN C_EMPLEADO;
 FETCH C_EMPLEADO INTO P_EMPLEADO;
 IF NOT C_EMPLEADO%FOUND THEN
    P_EMPLEADO := 'VACIO';
 END IF;
 CLOSE C_EMPLEADO;
 RETURN( P_EMPLEADO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_CCOSTO" (s_empleado in varchar2) RETURN varchar2 IS
 p_puesto varchar2(70);
 CURSOR c_puesto IS
  SELECT NOMBRE FROM MATEO.CONT_CCOSTO
  WHERE ID_CCOSTO IN 
     (SELECT ID_CCOSTO 
     FROM ARON.EMPLEADO_PUESTOS
     WHERE EMPLEADO_ID = s_empleado 
     AND ID_EJERCICIO = '001-'||TO_CHAR(SYSDATE,'YYYY'))
  AND SUBSTR(ID_EJERCICIO,5,4)=TO_CHAR(SYSDATE,'YYYY');
BEGIN
 open c_puesto;
 fetch c_puesto into p_puesto;
 if not c_puesto%found then
    p_puesto := 'X';
 end if;
 close c_puesto;
 RETURN( p_puesto );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_CLAVE" (S_ID IN NUMBER) RETURN VARCHAR2 IS
   p_empleado CHAR(7);
   CURSOR c_empleado IS
    SELECT
       CLAVE
    FROM ARON.EMPLEADO
    WHERE ID = s_id;
BEGIN
 open c_empleado;
 fetch c_empleado into p_empleado;
 if not c_empleado%found then
    p_empleado:= 'vacio';
 end if;
 close c_empleado;
 RETURN( p_empleado );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_EDAD" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
   P_CUMPLIDOS     NUMBER(4);
   CURSOR C_CUMPLIDOS IS
     SELECT FLOOR(MONTHS_BETWEEN(SYSDATE,F_NACIMIENTO)/12)
     FROM MAESTROS
     WHERE CODIGO_PERSONAL = S_CODIGO;
BEGIN
  OPEN C_CUMPLIDOS;
  FETCH C_CUMPLIDOS INTO
        P_CUMPLIDOS;
  CLOSE C_CUMPLIDOS;
  RETURN( P_CUMPLIDOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_GENERO" (S_CLAVE IN NUMBER) RETURN VARCHAR2 IS
   p_empleado CHAR(7);
   CURSOR c_empleado IS
    SELECT GENERO     
    FROM ARON.EMPLEADO
    WHERE CLAVE = S_CLAVE;
BEGIN
 open c_empleado;
 fetch c_empleado into p_empleado;
 if not c_empleado%found then
    p_empleado:= 'X';
 end if;
 close c_empleado;
 RETURN( p_empleado );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_NOMBRE" (s_empleado in varchar2) RETURN varchar2 IS
   p_empleado varchar2(100);
   CURSOR c_empleado IS
    SELECT
       NOMBRE||' '||APELLIDO_PATERNO||' '||APELLIDO_MATERNO
    FROM MAESTROS
    WHERE CODIGO_PERSONAL = s_empleado;
BEGIN
 open c_empleado;
 fetch c_empleado into p_empleado;
 if not c_empleado%found then
    p_empleado:= 'vacio';
 end if;
 close c_empleado;
 RETURN( p_empleado );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_PUESTO2" (S_EMPLEADO IN VARCHAR2) RETURN VARCHAR2 IS
 p_puesto VARCHAR2(200);
 CURSOR c_puesto IS
  SELECT DESCRIPCION FROM ARON.SECCION
  WHERE ID
     IN (SELECT PUESTO_ID
     FROM ARON.EMPLEADO_PUESTOS
     WHERE EMPLEADO_ID = s_empleado
     AND ID_EJERCICIO = '001-'||TO_CHAR(SYSDATE,'YYYY'));
BEGIN
 OPEN c_puesto;
 FETCH c_puesto INTO p_puesto;
 IF NOT c_puesto%FOUND THEN
    p_puesto := 'X';
 END IF;
 CLOSE c_puesto;
 RETURN( p_puesto );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_RELACION" (s_empleado in varchar2, s_folio in varchar2) RETURN varchar2 IS
   P_RELACION varchar2(100);
   CURSOR C_RELACION IS
    SELECT
          B.NOMBRE
  FROM ARON.EMPLEADO_DEPENDIENTES A, ARON.CAT_RELACION B 
  WHERE A.EMPLEADO_ID = s_empleado 
  AND ID = TO_NUMBER(s_folio,'99') 
  AND B.ID_RELACION = A.RELACION_ID;
BEGIN
 open C_RELACION;
 fetch C_RELACION into P_RELACION;
 if not C_RELACION%found then
    P_RELACION:= 'vacio';
 end if;
 close C_RELACION;
 RETURN( P_RELACION );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EMP_STATUS" (s_empleado in varchar2) RETURN varchar2 IS
   P_STATUS varchar2(1);
   CURSOR C_STATUS IS
    SELECT
       STATUS
    FROM ARON.EMPLEADO
    WHERE CLAVE = s_empleado;
BEGIN
 open C_STATUS;
 fetch C_STATUS into P_STATUS;
 if not C_STATUS%found then
    P_STATUS:= 'vacio';
 end if;
 close C_STATUS;
 RETURN( P_STATUS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ESTRATEGIA_NOMBRE" (PAR_ESTRATEGIA IN VARCHAR2) RETURN VARCHAR2 IS
 NOMBRE  VARCHAR2(80);
 CURSOR C_ESTRATEGIA IS SELECT NOMBRE_ESTRATEGIA FROM ENOC.CAT_ESTRATEGIA WHERE ESTRATEGIA_ID = PAR_ESTRATEGIA;
BEGIN
 OPEN C_ESTRATEGIA;
 FETCH C_ESTRATEGIA INTO NOMBRE;
 IF NOT C_ESTRATEGIA%FOUND THEN
    NOMBRE := 'X';
 END IF;
 CLOSE C_ESTRATEGIA;
 RETURN( NOMBRE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ES_DEUDOR" (s_codigo in varchar2, s_ejercicio in varchar2) RETURN varchar2 IS
 p_deudor varchar2(1);
 p_saldo float;
 
 CURSOR c_deudor IS
     SELECT 
     SUM(IMPORTE * DECODE(NATURALEZA, 'D', -1, 1)) 
  FROM MATEO.CONT_MOVIMIENTO
  WHERE ID_AUXILIARM = s_codigo
  AND ID_CTAMAYORM = '1.1.04.01'
  AND ID_EJERCICIO = s_ejercicio;
     
BEGIN
 p_deudor:= 'N';
  
 open c_deudor;
 fetch c_deudor into p_saldo;    
 if not c_deudor%found then
    p_saldo := 0;
 end if;    
 close c_deudor;
 
 if (p_saldo < -100) then 
    p_deudor:= 'S';
 end if;
    
 RETURN( p_deudor );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ES_PLAN_REMEDIAL" (S_PLAN IN VARCHAR2) RETURN CHAR IS
 P_REMEDIAL CHAR(1);
 NUMMATERIAS NUMBER(2);
 CURSOR C_REMEDIAL IS
      SELECT 
     NVL(COUNT(CURSO_ID),0) 
   FROM MAPA_CURSO 
   WHERE PLAN_ID = S_PLAN 
   AND TIPOCURSO_ID = 4;

BEGIN
 OPEN C_REMEDIAL;
 FETCH C_REMEDIAL INTO NUMMATERIAS;
 IF NOT C_REMEDIAL%FOUND THEN
    NUMMATERIAS := 0;
 END IF;
 CLOSE C_REMEDIAL;
 
 IF NUMMATERIAS>0 THEN 
    P_REMEDIAL:='S';
 ELSE
    P_REMEDIAL :='N';
 END IF;
        
 RETURN( P_REMEDIAL );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EVALUACION_CON_NOTA" (PAR_CURSO_CARGA_ID IN VARCHAR2, PAR_EVALUACION_ID IN NUMBER) RETURN NUMBER IS
NUM_EVAL  NUMBER(4);
CURSOR C_EVAL IS
 SELECT COUNT(EVALUACION_ID) FROM ENOC.KRDX_ALUMNO_EVAL WHERE CURSO_CARGA_ID = PAR_CURSO_CARGA_ID AND EVALUACION_ID = PAR_EVALUACION_ID;
BEGIN
 OPEN C_EVAL;
 FETCH C_EVAL INTO NUM_EVAL;
 IF NOT C_EVAL%FOUND THEN
    NUM_EVAL := 0;
 END IF;
 CLOSE C_EVAL;
 RETURN( NUM_EVAL );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EVALUACION_SUMA_ACT" (S_CURSO_CARGA_ID IN VARCHAR2, S_EVALUACION IN NUMBER) RETURN NUMBER IS
  P_VALOR  NUMBER(5,2);
  CURSOR C_VALOR IS SELECT COALESCE(SUM(VALOR),0) FROM ENOC.CARGA_GRUPO_ACTIVIDAD WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID AND EVALUACION_ID = S_EVALUACION;
BEGIN
 OPEN C_VALOR;
 FETCH C_VALOR INTO P_VALOR;
 IF NOT C_VALOR%FOUND THEN
    P_VALOR := 0;
 END IF;
 CLOSE C_VALOR;
 RETURN( P_VALOR );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EVALUACION_TIPO" (S_CURSO_CARGA_ID IN VARCHAR2, S_EVALUACION IN NUMBER) RETURN CHAR IS
  P_TIPO  CHAR(1); 
CURSOR C_TIPO IS 
SELECT TIPO 
FROM CARGA_GRUPO_EVALUACION 
WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID 
AND EVALUACION_ID = S_EVALUACION;
BEGIN
 OPEN C_TIPO;
 FETCH C_TIPO INTO P_TIPO;
 IF NOT C_TIPO%FOUND THEN
    P_TIPO := '%';
 END IF;
 CLOSE C_TIPO;
 RETURN( P_TIPO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EVALUACION_VALOR" (S_CURSO_CARGA_ID IN VARCHAR2, S_EVALUACION IN NUMBER) RETURN NUMBER IS
  P_VALOR  NUMBER(5,2);
CURSOR C_VALOR IS 
SELECT VALOR 
FROM CARGA_GRUPO_EVALUACION 
WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID
AND EVALUACION_ID = S_EVALUACION;
BEGIN
 OPEN C_VALOR;
 FETCH C_VALOR INTO P_VALOR;
 IF NOT C_VALOR%FOUND THEN
    P_VALOR := 0;
 END IF;
 CLOSE C_VALOR;
 RETURN( P_VALOR );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EXP_DOC_ORDEN" (PARDOCUMENTO_ID IN NUMBER) RETURN NUMBER IS
 P_ORDEN NUMBER(2);
 CURSOR C_ORDEN IS
     SELECT ORDEN
     FROM ENOC.EXP_DOCUMENTO
     WHERE DOCUMENTO_ID = PARDOCUMENTO_ID;
BEGIN
 OPEN C_ORDEN;
 FETCH C_ORDEN INTO P_ORDEN;
 IF NOT C_ORDEN%FOUND THEN
    P_ORDEN := 0;
 END IF;
 CLOSE C_ORDEN;
 RETURN( P_ORDEN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EXTENSION_FAC" (s_fac in varchar2,s_carga in varchar2) RETURN Number IS
 p_creditos  number(5);
 CURSOR c_creditos IS
  Select count(modalidad_id) modalidad
  from estadistica
  Where carga_id = s_carga
    and facultad_ID = s_fac
     and modalidad_id = '3';
BEGIN
 open c_creditos;
 fetch c_creditos into p_creditos;
 if not c_creditos%found then
    p_creditos := 0;
 end if;
 close c_creditos;
 RETURN( p_creditos );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."EXTERNOS_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5);
 CURSOR C_CREDITOS IS
 SELECT COUNT(RESIDENCIA_ID) RESIDENCIA
     FROM ESTADISTICA
      WHERE CARGA_ID = S_CARGA
     AND FACULTAD_ID = S_FAC
     AND RESIDENCIA_ID = 'E';
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."FECHA_CARGA" (S_CARGA IN VARCHAR2) RETURN VARCHAR2 IS
 P_FECHA  VARCHAR2(10);
 CURSOR C_CARGA IS
     SELECT
     TO_CHAR(F_FINAL,'DD/MM/YYYY')
     FROM CARGA
     WHERE CARGA_ID = S_CARGA;
BEGIN
 OPEN C_CARGA;
 FETCH C_CARGA INTO P_FECHA;
 IF NOT C_CARGA%FOUND THEN
    P_FECHA := '01/01/1900';
 END IF;
 CLOSE C_CARGA;
 RETURN( P_FECHA );
END; 
/

CREATE OR REPLACE FUNCTION "ENOC"."FECHA_EVALUACION" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_FECHA  VARCHAR2(10);
 CURSOR C_GRUPO IS
     SELECT
     TO_CHAR(F_EVALUACION,'DD/MM/YYYY')
     FROM CARGA_GRUPO
     WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;
BEGIN
 OPEN C_GRUPO;
 FETCH C_GRUPO INTO P_FECHA;
 IF NOT C_GRUPO%FOUND THEN
    P_FECHA := '000000-0000';
 END IF;
 CLOSE C_GRUPO;
 RETURN( P_FECHA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."FECHA_FM3" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_FECHA  VARCHAR2(10);
 CURSOR C_FM3 IS
     SELECT
     TO_CHAR(FECHA_VENCE,'DD/MM/YYYY')
     FROM LEG_EXTDOCTOS
     WHERE CODIGO = S_CODIGO
	 AND IDDOCUMENTO=2;
BEGIN
 OPEN C_FM3;
 FETCH C_FM3 INTO P_FECHA;
 IF NOT C_FM3%FOUND THEN
    P_FECHA := '01/01/1900';
 END IF;
 CLOSE C_FM3;
 RETURN( P_FECHA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."FECHA_FM3_REVERSA" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_FECHA  VARCHAR2(10);
 CURSOR C_FM3 IS
     SELECT
     TO_CHAR(FECHA_VENCE,'YYYY/MM/DD')
     FROM LEG_EXTDOCTOS
     WHERE CODIGO = S_CODIGO
	 AND IDDOCUMENTO=2;
BEGIN
 OPEN C_FM3;
 FETCH C_FM3 INTO P_FECHA;
 IF NOT C_FM3%FOUND THEN
    P_FECHA := '2000/01/01';
 END IF;
 CLOSE C_FM3;
 RETURN( P_FECHA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."FECHA_PASAPORTE" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_FECHA  VARCHAR2(10);
 CURSOR C_PASAPORTE IS
     SELECT
     TO_CHAR(FECHA_VENCE,'DD/MM/YYYY')
     FROM LEG_EXTDOCTOS
     WHERE CODIGO = S_CODIGO
	 AND IDDOCUMENTO=3;
BEGIN
 OPEN C_PASAPORTE;
 FETCH C_PASAPORTE INTO P_FECHA;
 IF NOT C_PASAPORTE%FOUND THEN
    P_FECHA := '01/01/2000';
 END IF;
 CLOSE C_PASAPORTE;
 RETURN( P_FECHA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."FECHA_PASAPORTE2" (S_CODIGO IN VARCHAR2) RETURN VARCHAR2 IS
 P_FECHA  VARCHAR2(10);
 CURSOR C_PASAPORTE IS
     SELECT
     TO_CHAR(FECHA_VENCE,'YYYY/MM/DD')
     FROM LEG_EXTDOCTOS
     WHERE CODIGO = S_CODIGO
	 AND IDDOCUMENTO=3;
BEGIN
 OPEN C_PASAPORTE;
 FETCH C_PASAPORTE INTO P_FECHA;
 IF NOT C_PASAPORTE%FOUND THEN
    P_FECHA := '2000/01/01';
 END IF;
 CLOSE C_PASAPORTE;
 RETURN( P_FECHA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_BLOQUE" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN NUMBER IS
 P_BLOQUE NUMBER(2);
 CURSOR C_CURSO IS
  SELECT BLOQUE_ID FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;
BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_BLOQUE;
 IF NOT C_CURSO%FOUND THEN
    P_BLOQUE := 0;
 END IF;
 CLOSE C_CURSO;
 RETURN( P_BLOQUE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_CARRERA" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN NUMBER IS
 P_CARRERA VARCHAR2(6);
 CURSOR C_CURSO IS
  SELECT CARRERA_ID FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;
BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_CARRERA;
 IF NOT C_CURSO%FOUND THEN
    P_CARRERA := '0';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_CARRERA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_ESTADO" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_ESTADO VARCHAR2(1);
 CURSOR C_CURSO IS
  SELECT ESTADO FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_ESTADO;
 IF NOT C_CURSO%FOUND THEN
    P_ESTADO := 'X';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_ESTADO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_GRUPO" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_GRUPO VARCHAR2(2);
 CURSOR C_CURSO IS
  SELECT COALESCE(REPLACE(GRUPO,' ',''),'X') FROM CARGA_GRUPO WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;
BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_GRUPO;
 IF NOT C_CURSO%FOUND THEN
    P_GRUPO := 'X';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_GRUPO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_MAESTRO" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_MAESTRO VARCHAR2(120);
 CURSOR C_CURSO IS
  SELECT CODIGO_PERSONAL FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_MAESTRO;
 IF NOT C_CURSO%FOUND THEN
    P_MAESTRO := 'X';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_MAESTRO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_MODALIDAD" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_MODALIDAD NUMBER(2,0);
 CURSOR C_CURSO IS
  SELECT MODALIDAD_ID FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_MODALIDAD;
 IF NOT C_CURSO%FOUND THEN
    P_MODALIDAD := 0;
 END IF;
 CLOSE C_CURSO;
 RETURN( P_MODALIDAD );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_NUM_ACTIV" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN NUMBER IS
 P_TOTAL NUMBER(5);
 
 CURSOR C_CURSO IS
  SELECT COALESCE(COUNT(ACTIVIDAD_ID),0) FROM CARGA_GRUPO_ACTIVIDAD
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_TOTAL;
 IF NOT C_CURSO%FOUND THEN
    P_TOTAL := 0;
 END IF;
 CLOSE C_CURSO;
 RETURN( P_TOTAL );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_NUM_EVAL" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN NUMBER IS
 P_EVALUACIONES NUMBER(5);
 
 CURSOR C_CURSO IS
  SELECT COALESCE(COUNT(EVALUACION_ID),0) FROM CARGA_GRUPO_EVALUACION
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_EVALUACIONES;
 IF NOT C_CURSO%FOUND THEN
    P_EVALUACIONES := 0;
 END IF;
 CLOSE C_CURSO;
 RETURN( P_EVALUACIONES );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_OPTATIVA" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_OPTATIVA VARCHAR2(120);
 CURSOR C_CURSO IS
  SELECT OPTATIVA FROM CARGA_GRUPO
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;

BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_OPTATIVA;
 IF NOT C_CURSO%FOUND THEN
    P_OPTATIVA := '*';
 END IF;
 CLOSE C_CURSO;
 RETURN( P_OPTATIVA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."GRUPO_SUM_EVAL" (S_CURSO_CARGA_ID IN VARCHAR2) RETURN NUMBER IS
 P_EVALUACIONES NUMBER(5,2); 
 CURSOR C_CURSO IS
  SELECT COALESCE(SUM(VALOR),0) FROM ENOC.CARGA_GRUPO_EVALUACION
  WHERE CURSO_CARGA_ID = S_CURSO_CARGA_ID;
BEGIN
 OPEN C_CURSO;
 FETCH C_CURSO INTO P_EVALUACIONES;
 IF NOT C_CURSO%FOUND THEN
    P_EVALUACIONES := 0;
 END IF;
 CLOSE C_CURSO;
 RETURN( P_EVALUACIONES );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."HOMBRES_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5);
 CURSOR C_CREDITOS IS
 SELECT COUNT(DISTINCT(CODIGO_PERSONAL)) AS SEXO 
 FROM ALUM_ESTADO 
 WHERE CARGA_ID = S_CARGA
 AND ESTADO = 'I'
 AND FACULTAD(ALUM_CARRERA_HISTORICA(CODIGO_PERSONAL,CARGA_ID,BLOQUE_ID))= S_FAC
 AND CODIGO_PERSONAL IN (SELECT CODIGO_PERSONAL FROM ALUM_PERSONAL WHERE SEXO = 'M');
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."INSCRITOS_CARR" (S_CARR IN VARCHAR2, S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_INSCRITOS  NUMBER(5);
 
 CURSOR C_INSCRITOS IS
 SELECT COUNT(DISTINCT(CODIGO_PERSONAL)) AS TOTAL 
 FROM ALUM_ESTADO 
 WHERE CARGA_ID = S_CARGA
 AND ALUM_CARRERA_HISTORICA(CODIGO_PERSONAL,CARGA_ID,BLOQUE_ID) = S_CARR
 AND ESTADO IN ('I','3');
BEGIN
 OPEN C_INSCRITOS;
 FETCH C_INSCRITOS INTO P_INSCRITOS;
 IF NOT C_INSCRITOS%FOUND THEN
    P_INSCRITOS := 0;
 END IF;
 CLOSE C_INSCRITOS;
 RETURN( P_INSCRITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."INSCRITOS_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_INSCRITOS  NUMBER(5);
 
 CURSOR C_INSCRITOS IS
 SELECT COUNT(CODIGO_PERSONAL) AS TOTAL 
 FROM ALUM_ESTADO 
 WHERE CARGA_ID = S_CARGA
 AND FACULTAD(ALUM_CARRERA_ID(CODIGO_PERSONAL))= S_FAC
 AND ESTADO ='I';
BEGIN
 OPEN C_INSCRITOS;
 FETCH C_INSCRITOS INTO P_INSCRITOS;
 IF NOT C_INSCRITOS%FOUND THEN
    P_INSCRITOS := 0;
 END IF;
 CLOSE C_INSCRITOS;
 RETURN( P_INSCRITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."INSCRITOS_FAC_TOT" (S_FAC IN VARCHAR2, S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_INSCRITOS  NUMBER(5);
 
 CURSOR C_INSCRITOS IS
 SELECT COUNT(DISTINCT(CODIGO_PERSONAL)) AS TOTAL 
 FROM ALUM_ESTADO 
 WHERE CARGA_ID = S_CARGA
 AND FACULTAD(ALUM_CARRERA_HISTORICA(CODIGO_PERSONAL,CARGA_ID,BLOQUE_ID)) = S_FAC
 AND ESTADO IN ('I','3');
BEGIN
 OPEN C_INSCRITOS;
 FETCH C_INSCRITOS INTO P_INSCRITOS;
 IF NOT C_INSCRITOS%FOUND THEN
    P_INSCRITOS := 0;
 END IF;
 CLOSE C_INSCRITOS;
 RETURN( P_INSCRITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."INSTITUCION_NOMBRE_FIN" (INSTITUCION IN NUMBER) RETURN VARCHAR2 IS
 P_INSTITUCION  VARCHAR2(100);
 CURSOR C_INST IS
     SELECT
        NOMBRE
     FROM NOE.CAT_INSTITUCION
     WHERE ID = INSTITUCION;
BEGIN
 OPEN C_INST;
 FETCH C_INST INTO P_INSTITUCION;
 IF NOT C_INST%FOUND THEN
    P_INSTITUCION := '-';
 END IF;
 CLOSE C_INST;
 RETURN( P_INSTITUCION );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."INTERNOS_FAC" (s_fac in varchar2,s_carga in varchar2) RETURN Number IS
 p_creditos  number(5);
 CURSOR c_creditos IS
 Select count(distinct codigo_personal) residencia
     from estadistica
      Where carga_id = s_carga
     and facultad(carrera_id)= s_fac
     and residencia_id = 'I';
BEGIN
 open c_creditos;
 fetch c_creditos into p_creditos;
 if not c_creditos%found then
    p_creditos := 0;
 end if;
 close c_creditos;
 RETURN( p_creditos );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."MAESTRO_CARRERA_GRUPOS" (S_CODIGO IN VARCHAR2,S_CARRERA IN VARCHAR2) RETURN NUMBER IS
P_GRUPOS  NUMBER(5);
CURSOR C_GRUPOS IS
 SELECT COUNT(CODIGO_PERSONAL) AS GRUPOS
FROM CARGA_GRUPO
Where CODIGO_PERSONAL = S_CODIGO
AND CARRERA_ID = S_CARRERA;
BEGIN
 open C_GRUPOS;
 fetch C_GRUPOS into P_GRUPOS;
 if not C_GRUPOS%found then
    P_GRUPOS := 0;
 end if;
 close C_GRUPOS;
 RETURN( P_GRUPOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."MATERIA_ALUMNOS" (PAR_CURSO_CARGA_ID IN VARCHAR2) RETURN NUMBER IS
NUM_ALUMNOS  NUMBER(4);
CURSOR C_ALUMNOS IS
 SELECT COUNT(CODIGO_PERSONAL) FROM ENOC.KRDX_CURSO_ACT WHERE CURSO_CARGA_ID = PAR_CURSO_CARGA_ID AND TIPOCAL_ID != 'M';
BEGIN
 OPEN C_ALUMNOS;
 FETCH C_ALUMNOS INTO NUM_ALUMNOS;
 IF NOT C_ALUMNOS%FOUND THEN
    NUM_ALUMNOS := 0;
 END IF;
 CLOSE C_ALUMNOS;
 RETURN( NUM_ALUMNOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."MATERIA_ALUMNOS_ACTIVOS" (PAR_CURSO_CARGA_ID IN VARCHAR2) RETURN NUMBER IS
NUM_ALUMNOS  NUMBER(4);
CURSOR C_ALUMNOS IS
 SELECT COUNT(CODIGO_PERSONAL) FROM ENOC.KRDX_CURSO_ACT WHERE CURSO_CARGA_ID = PAR_CURSO_CARGA_ID AND TIPOCAL_ID NOT IN ('M','3');
BEGIN
 OPEN C_ALUMNOS;
 FETCH C_ALUMNOS INTO NUM_ALUMNOS;
 IF NOT C_ALUMNOS%FOUND THEN
    NUM_ALUMNOS := 0;
 END IF;
 CLOSE C_ALUMNOS;
 RETURN( NUM_ALUMNOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."MD5HASH" (str IN VARCHAR2)
	RETURN VARCHAR2
	IS v_checksum VARCHAR2(32);
 
	BEGIN
		v_checksum := RAWTOHEX( UTL_RAW.CAST_TO_RAW( sys.dbms_obfuscation_toolkit.md5(input_string => str) ) );
		RETURN v_checksum;
	END md5hash;
/

CREATE OR REPLACE FUNCTION "ENOC"."MEXICANOS_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5);
 CURSOR C_CREDITOS IS
SELECT COUNT(DISTINCT CODIGO_PERSONAL) NACIONALIDAD
FROM ESTADISTICA
WHERE CARGA_ID = S_CARGA
   AND FACULTAD(CARRERA_ID)=S_FAC
   AND NACIONALIDAD = 91;
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NEWPLAN" (S_CODIGO IN VARCHAR2, S_PLAN IN VARCHAR2) RETURN CHAR IS
 P_INGRESO  CHAR(1);
 P_NUMMAT NUMBER(3);
 
 CURSOR C_INGRESO IS 
   SELECT COUNT(CODIGO_PERSONAL) 
   FROM ALUMNO_CURSO 
   WHERE CODIGO_PERSONAL = S_CODIGO
   AND TIPOCAL_ID NOT IN ('I','M','3')
   AND CONVALIDACION IN('N','I')
   AND PLAN_ID = S_PLAN;
   
BEGIN
 OPEN C_INGRESO;
 FETCH C_INGRESO INTO P_NUMMAT;
 IF NOT C_INGRESO%FOUND THEN
    P_INGRESO := 'S';
 END IF;
 CLOSE C_INGRESO;
 
 IF P_NUMMAT >0 THEN 
    P_INGRESO := 'N';
 ELSE
    P_INGRESO := 'S'; 
 END IF;
 
 RETURN( P_INGRESO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NEWUM" (S_CODIGO IN VARCHAR2) RETURN CHAR IS
 P_INGRESO  CHAR(1);
 P_NUMMAT NUMBER(3);
 
 CURSOR C_INGRESO IS 
   SELECT COUNT(CODIGO_PERSONAL) 
   FROM ALUMNO_CURSO 
   WHERE CODIGO_PERSONAL = S_CODIGO
   AND TIPOCAL_ID NOT IN ('I','M','3')
   AND CONVALIDACION IN('N','I');
   
BEGIN
 OPEN C_INGRESO;
 FETCH C_INGRESO INTO P_NUMMAT;
 IF NOT C_INGRESO%FOUND THEN
    P_INGRESO := 'S';
 END IF;
 CLOSE C_INGRESO;
 
 IF P_NUMMAT >0 THEN 
    P_INGRESO := 'N';
 ELSE
    P_INGRESO := 'S'; 
 END IF;
 
 RETURN( P_INGRESO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NIVEL_PLAN" (PLAN IN VARCHAR2) RETURN NUMBER IS
 P_NIVEL  NUMBER(2);
 CURSOR C_NIVEL IS
     SELECT 
	   NIVEL_ID 
	 FROM CAT_CARRERA 
	 WHERE CARRERA_ID = 
	 	   (SELECT CARRERA_ID FROM MAPA_PLAN WHERE PLAN_ID = PLAN);
BEGIN
 OPEN C_NIVEL;
 FETCH C_NIVEL INTO P_NIVEL;
 IF NOT C_NIVEL%FOUND THEN
    P_NIVEL := 0;
 END IF;
 CLOSE C_NIVEL;
 RETURN( P_NIVEL );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NOCTURNA_FAC" (s_fac in varchar2,s_carga in varchar2) RETURN Number IS
 p_creditos  number(5);
 CURSOR c_creditos IS
  Select count(distinct codigo_personal) modalidad
  from estadistica
  Where carga_id = s_carga
    and facultad(carrera_id)=s_fac
     and modalidad_id = '4';
BEGIN
 open c_creditos;
 fetch c_creditos into p_creditos;
 if not c_creditos%found then
    p_creditos := 0;
 end if;
 close c_creditos;
 RETURN( p_creditos );
END; 
/

CREATE OR REPLACE FUNCTION "ENOC"."NOMBRE_CCOSTO" ( PAR_EJERCICIO IN VARCHAR2, PAR_CCOSTO IN VARCHAR2) RETURN VARCHAR2 IS
 P_NOMBRE VARCHAR2(60);
 CURSOR C_NOMBRE IS 
     SELECT NOMBRE FROM MATEO.CONT_CCOSTO WHERE ID_EJERCICIO = PAR_EJERCICIO AND ID_CCOSTO = PAR_CCOSTO;
BEGIN
 OPEN C_NOMBRE;
 FETCH C_NOMBRE INTO P_NOMBRE;
 IF NOT C_NOMBRE%FOUND THEN
    P_NOMBRE := 'VACIO';
 END IF;
 CLOSE C_NOMBRE;
 RETURN( P_NOMBRE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NOMBRE_DOCUMENTO" (S_DOCUMENTO IN NUMBER) RETURN VARCHAR2 IS
 P_DOCUMENTO  VARCHAR2(60);
 CURSOR C_DOCUMENTO IS
     SELECT
        DESCRIPCION
     FROM ARCH_DOCUMENTOS
     WHERE IDDOCUMENTO = S_DOCUMENTO;

BEGIN
 open C_DOCUMENTO;
 fetch C_DOCUMENTO into P_DOCUMENTO;
 if not C_DOCUMENTO%found then
    P_DOCUMENTO := 'X';
 end if;
 close C_DOCUMENTO;
 RETURN( P_DOCUMENTO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NOMBRE_ESTADO" (S_PAIS IN VARCHAR2, S_ESTADO IN VARCHAR2) RETURN V----ARCHAR2 IS
 P_ESTADO VARCHAR2(50);
 CURSOR C_ESTADO IS
     SELECT NOMBRE_ESTADO
     FROM CAT_ESTADO
     WHERE PAIS_ID = S_PAIS
     AND ESTADO_ID = S_ESTADO;
BEGIN
 OPEN C_ESTADO;
 FETCH C_ESTADO INTO P_ESTADO;
 IF NOT C_ESTADO%FOUND THEN
    P_ESTADO := 'Vacio';
 END IF;
 CLOSE C_ESTADO;
 RETURN( P_ESTADO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NOMBRE_MATERIA" (S_CURSO_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_ALUMNO VARCHAR2(120);
 CURSOR C_ALUMNO IS
     SELECT
        NOMBRE_CURSO
     FROM MAPA_CURSO
     WHERE CURSO_ID = S_CURSO_ID;

BEGIN
 OPEN C_ALUMNO;
 FETCH C_ALUMNO INTO P_ALUMNO;
 IF NOT C_ALUMNO%FOUND THEN
    P_ALUMNO := 'vacio';
 END IF;
 CLOSE C_ALUMNO;
 RETURN( P_ALUMNO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NOMBRE_PAIS" (s_pais in NUMBER) RETURN varchar2 IS
 p_pais varchar2(50);
 CURSOR c_pais IS
     SELECT NOMBRE_PAIS
     FROM CAT_PAIS
     WHERE PAIS_ID = s_pais;
BEGIN
 open c_pais;
 fetch c_pais into p_pais;
 if not c_pais%found then
    p_pais := 'Vacio';
 end if;
 close c_pais;
 RETURN( p_pais );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NUM_ESTRA" (s_curso in varchar2) RETURN varchar2 IS
 p_estrategia  Number(3);
 CURSOR c_estrategia IS
  SELECT 
     COUNT(EVALUACION_ID) 
  FROM CARGA_GRUPO_EVALUACION 
  WHERE CURSO_CARGA_ID = s_curso;
BEGIN
 open c_estrategia;
 fetch c_estrategia into p_estrategia;
 if not c_estrategia%found then
    p_estrategia := 0;
 end if;
 close c_estrategia;
 RETURN( p_estrategia );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."NUM_ESTRA_EVAL" (S_CURSO IN VARCHAR2) RETURN VARCHAR2 IS
 P_ESTRATEGIA  NUMBER(3);
 CURSOR C_ESTRATEGIA IS
  SELECT 
     COUNT(DISTINCT(EVALUACION_ID)) 
  FROM ENOC.KRDX_ALUMNO_EVAL 
  WHERE CURSO_CARGA_ID = S_CURSO;
BEGIN
 OPEN C_ESTRATEGIA;
 FETCH C_ESTRATEGIA INTO P_ESTRATEGIA;
 IF NOT C_ESTRATEGIA%FOUND THEN
    P_ESTRATEGIA := 0;
 END IF;
 CLOSE C_ESTRATEGIA;
 RETURN( P_ESTRATEGIA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ONLINE_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5);
 CURSOR C_CREDITOS IS
  SELECT COUNT(DISTINCT CODIGO_PERSONAL) MODALIDAD
  FROM ESTADISTICA
  WHERE CARGA_ID = S_CARGA
    AND FACULTAD(CARRERA_ID)=S_FAC
     AND MODALIDAD_ID = '5';
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ORDEN_DOCUMENTO" (S_DOCUMENTO IN NUMBER) RETURN NUMBER IS
  P_ORDEN  NUMBER(4,1); 
  CURSOR C_ORDEN IS 
    SELECT COALESCE(ORDEN,999)
    FROM ENOC.ARCH_DOCUMENTOS
    WHERE IDDOCUMENTO = S_DOCUMENTO;
BEGIN
 OPEN C_ORDEN;
 FETCH C_ORDEN INTO P_ORDEN;
 IF NOT C_ORDEN%FOUND THEN
    P_ORDEN := 999;
 END IF;
 CLOSE C_ORDEN;
 RETURN( P_ORDEN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."PLAN" (S_CURSOID IN VARCHAR2) RETURN VARCHAR2 IS
 P_PLAN VARCHAR2(8);
 CURSOR C_PLAN IS
     SELECT TRIM(PLAN_ID) FROM MAPA_CURSO WHERE CURSO_ID = S_CURSOID;
BEGIN
 OPEN C_PLAN;
 FETCH C_PLAN INTO P_PLAN;
 IF NOT C_PLAN%FOUND THEN
    P_PLAN := 'vacio';
 END IF;
 CLOSE C_PLAN;
 RETURN( P_PLAN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."PLAN_NOMBRE" (S_PLAN_ID IN VARCHAR2) RETURN VARCHAR2 IS
 P_PLAN VARCHAR2(120);
 CURSOR C_PLAN IS
     SELECT COALESCE(CARRERA_SE,NOMBRE_PLAN) FROM MAPA_PLAN
     WHERE PLAN_ID = S_PLAN_ID;
BEGIN
 OPEN C_PLAN;
 FETCH C_PLAN INTO P_PLAN;
 IF NOT C_PLAN%FOUND THEN
    P_PLAN := 'vacio';
 END IF;
 CLOSE C_PLAN;
 RETURN( P_PLAN );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."PRESENCIALES_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5);
 CURSOR C_CREDITOS IS
SELECT COUNT(DISTINCT CODIGO_PERSONAL) MODALIDAD
FROM ESTADISTICA
WHERE CARGA_ID = S_CARGA
   AND FACULTAD(CARRERA_ID)=S_FAC
   AND MODALIDAD_ID = '1';
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."PRIMER_INGRESO" (S_CODIGO IN VARCHAR2) RETURN CHAR IS
 P_INGRESO  CHAR(1);
 P_NUMMAT NUMBER(3);
 
 CURSOR C_INGRESO IS 
   SELECT COUNT(CODIGO_PERSONAL) 
   FROM ALUMNO_CURSO 
   WHERE CODIGO_PERSONAL = S_CODIGO
   AND TIPOCAL_ID != 'I'
   AND CONVALIDACION IN('N','I');
   
BEGIN
 OPEN C_INGRESO;
 FETCH C_INGRESO INTO P_NUMMAT;
 IF NOT C_INGRESO%FOUND THEN
    P_INGRESO := 'S';
 END IF;
 CLOSE C_INGRESO;
 
 IF P_NUMMAT >0 THEN 
    P_INGRESO := 'N';
 ELSE
    P_INGRESO := 'S'; 
 END IF;
 
 RETURN( P_INGRESO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."PROM_CARGA" (SCARGA IN VARCHAR2) RETURN FLOAT IS
 P_NOTA  NUMBER(5,2);
 SUMANOTAXCREDITO NUMBER(10);
 SUMACREDITOS  NUMBER(10);
 
 CURSOR C_PROMEDIO IS
   SELECT DECODE(NVL(A.NOTA_EXTRA,0),0,NVL(A.NOTA,0),NVL(A.NOTA_EXTRA,0)) AS CAL, B.CREDITOS  
   FROM KRDX_CURSO_ACT A, MAPA_CURSO B 
   WHERE SUBSTR(CURSO_CARGA_ID,1,6)=SCARGA
   AND A.CURSO_ID = B.CURSO_ID
   AND TIPOCAL_ID IN('1','2','4')
   AND B.TIPOCURSO_ID IN (1,2,7);
BEGIN 
 SUMANOTAXCREDITO:= 0; SUMACREDITOS:= 0; 
 
 FOR REGISTRO IN C_PROMEDIO LOOP
  
    SUMACREDITOS:= SUMACREDITOS + REGISTRO.CREDITOS;
       SUMANOTAXCREDITO:= SUMANOTAXCREDITO + (REGISTRO.CREDITOS*REGISTRO.CAL);
    
 END LOOP;
 
 IF SUMACREDITOS>0 THEN
    P_NOTA:= SUMANOTAXCREDITO / SUMACREDITOS;
 ELSE
    P_NOTA:=0;   
 END IF;
 RETURN( P_NOTA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."SEP_ESTADO_NOMBRE" (VAR_PAIS IN NUMBER, VAR_ESTADO IN NUMBER) RETURN VARCHAR2 IS
 P_LUGAR VARCHAR2(100);
 CURSOR C_LUGAR IS
    SELECT SEP_LARGO FROM ENOC.CAT_ESTADO WHERE PAIS_ID = VAR_PAIS AND ESTADO_ID = VAR_ESTADO;
BEGIN
 OPEN C_LUGAR;
 FETCH C_LUGAR INTO P_LUGAR;
 IF NOT C_LUGAR%FOUND THEN
    P_LUGAR := '-';
 END IF;
 CLOSE C_LUGAR;
 RETURN( P_LUGAR );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."SEP_LUGAR_ID" (VAR_CODIGO IN VARCHAR2) RETURN NUMBER IS
 P_LUGAR NUMBER(2);
 CURSOR C_LUGAR IS
     SELECT PREPA_LUGAR FROM ALUM_ACADEMICO WHERE CODIGO_PERSONAL = VAR_CODIGO;
BEGIN
 OPEN C_LUGAR;
 FETCH C_LUGAR INTO P_LUGAR;
 IF NOT C_LUGAR%FOUND THEN
    P_LUGAR := 0;
 END IF;
 CLOSE C_LUGAR;
 RETURN( P_LUGAR );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."SEP_PAIS_NOMBRE" (VAR_PAIS IN NUMBER) RETURN VARCHAR2 IS
 P_LUGAR VARCHAR2(100);
 CURSOR C_LUGAR IS
    SELECT SEP_PAIS FROM ENOC.CAT_PAIS WHERE PAIS_ID = VAR_PAIS;
BEGIN
 OPEN C_LUGAR;
 FETCH C_LUGAR INTO P_LUGAR;
 IF NOT C_LUGAR%FOUND THEN
    P_LUGAR := '-';
 END IF;
 CLOSE C_LUGAR;
 RETURN( P_LUGAR );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."SUMA_ESTRA" (S_CURSO IN VARCHAR2) RETURN VARCHAR2 IS
 P_ESTRATEGIA  NUMBER(3);
 CURSOR C_ESTRATEGIA IS
  SELECT 
     SUM(VALOR) 
  FROM CARGA_GRUPO_EVALUACION 
  WHERE CURSO_CARGA_ID = S_CURSO;
BEGIN
 OPEN C_ESTRATEGIA;
 FETCH C_ESTRATEGIA INTO P_ESTRATEGIA;
 IF NOT C_ESTRATEGIA%FOUND THEN
    P_ESTRATEGIA := 0;
 END IF;
 CLOSE C_ESTRATEGIA;
 RETURN( P_ESTRATEGIA );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."TIPOCURSO_ID" (S_CURSO_ID IN VARCHAR2) RETURN NUMBER IS
 P_TIPO NUMBER(2);
 CURSOR C_TIPO IS
     SELECT
        TIPOCURSO_ID
     FROM MAPA_CURSO
     WHERE CURSO_ID = S_CURSO_ID;

BEGIN
 OPEN C_TIPO;
 FETCH C_TIPO INTO P_TIPO;
 IF NOT C_TIPO%FOUND THEN
    P_TIPO := 0;
 END IF;
 CLOSE C_TIPO;
 RETURN( P_TIPO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."TIT_FOLIONUEVO" (S_FOLIO IN VARCHAR2) RETURN VARCHAR2 IS
 P_FOLIO  VARCHAR2(12);
 CURSOR C_FOLIO IS
     SELECT FOLIO_NUEVO FROM ENOC.TIT_ALUMNO2 WHERE FOLIO = S_FOLIO;
BEGIN
 OPEN C_FOLIO;
 FETCH C_FOLIO INTO P_FOLIO;
 IF NOT C_FOLIO%FOUND THEN
    P_FOLIO := 6;
 END IF;
 CLOSE C_FOLIO;
 RETURN( P_FOLIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."TOTALINSCRITOS_FAC" (FID IN VARCHAR2) RETURN NUMBER IS
 P_TOTAL  NUMBER(4);
 CURSOR C_TOTAL IS
 	SELECT 
	  COUNT(DISTINCT(MATRICULA))  
	FROM MATEO.FES_CCOBRO 
	WHERE CARGA_ID IN 
	  	(SELECT CARGA_ID FROM CARGA WHERE TO_DATE(SYSDATE,'DD-MM-YY') BETWEEN F_INICIO AND F_FINAL)
	AND FACULTAD_ID =  FID
	AND INSCRITO = 'S'
	AND MATRICULA NOT IN 
		(SELECT CODIGO_PERSONAL FROM ALUM_ESTADO WHERE CARGA_ID = MATEO.FES_CCOBRO.CARGA_ID AND ESTADO = '3');		
     
BEGIN
 OPEN C_TOTAL;
 FETCH C_TOTAL INTO P_TOTAL;
 CLOSE C_TOTAL;
 RETURN( P_TOTAL);
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."TRAMITE_NOMBRE" (PAR_TRAMITE IN NUMBER) RETURN VARCHAR2 IS
P_NOMBRE  VARCHAR2(50);
CURSOR C_ORDEN IS 
  SELECT NOMBRE FROM ENOC.BIT_TRAMITE WHERE TRAMITE_ID = PAR_TRAMITE;
BEGIN
 OPEN C_ORDEN;
 FETCH C_ORDEN INTO P_NOMBRE;
 IF NOT C_ORDEN%FOUND THEN
    P_NOMBRE := '-';
 END IF;
 CLOSE C_ORDEN;
 RETURN( P_NOMBRE );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."UNID_FAC" (S_FAC IN VARCHAR2,S_CARGA IN VARCHAR2) RETURN NUMBER IS
 P_CREDITOS  NUMBER(5);
 CURSOR C_CREDITOS IS
SELECT COUNT(DISTINCT CODIGO_PERSONAL) MODALIDAD
FROM ESTADISTICA
WHERE CARGA_ID = S_CARGA
   AND FACULTAD(CARRERA_ID)=S_FAC
   AND MODALIDAD_ID = '2';
BEGIN
 OPEN C_CREDITOS;
 FETCH C_CREDITOS INTO P_CREDITOS;
 IF NOT C_CREDITOS%FOUND THEN
    P_CREDITOS := 0;
 END IF;
 CLOSE C_CREDITOS;
 RETURN( P_CREDITOS );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."USUARIO" ( CODIGO IN VARCHAR2 ) RETURN VARCHAR2 IS
 P_USUARIO VARCHAR2(20);
 
 CURSOR C_USUARIO IS
   SELECT USUARIO FROM ACCESO WHERE CODIGO_PERSONAL = CODIGO;
BEGIN
 OPEN C_USUARIO;
 FETCH C_USUARIO INTO P_USUARIO;
 IF NOT C_USUARIO%FOUND THEN
    P_USUARIO := 'NO EXISTE';
 END IF;
 CLOSE C_USUARIO;
 RETURN( P_USUARIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."USUARIO_APELLIDO" (S_USUARIO in varchar2) RETURN varchar2 IS
   P_USUARIO varchar2(100);
   CURSOR C_USUARIO IS
    SELECT
       APELLIDO_PATERNO||' '||APELLIDO_MATERNO||' '||NOMBRE
    FROM USUARIOS
    WHERE CODIGO_PERSONAL = S_USUARIO;
BEGIN
 open C_USUARIO;
 fetch C_USUARIO into p_USUARIO;
 if not C_USUARIO % found then
    P_USUARIO := 'vacio';
 end if;
 close C_USUARIO;
 RETURN( P_USUARIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."USUARIO_NOMBRE" (S_USUARIO in varchar2) RETURN varchar2 IS
   P_USUARIO varchar2(100);
   CURSOR C_USUARIO IS
    SELECT
       NOMBRE||' '||APELLIDO_PATERNO||' '||APELLIDO_MATERNO
    FROM USUARIOS
    WHERE CODIGO_PERSONAL = S_USUARIO;
BEGIN
 open C_USUARIO;
 fetch C_USUARIO into p_USUARIO;
 if not C_USUARIO % found then
    P_USUARIO := 'vacio';
 end if;
 close C_USUARIO;
 RETURN( P_USUARIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."USUARIO_NOMBRE_CORTO" (S_USUARIO in varchar2) RETURN varchar2 IS
   P_USUARIO varchar2(100);
   CURSOR C_USUARIO IS
    SELECT
       TRIM(SUBSTR(NOMBRE,1, (CASE INSTR(NOMBRE,' ') WHEN 0 THEN LENGTH(NOMBRE) ELSE INSTR(NOMBRE,' ') END)  ))||' '||TRIM(APELLIDO_PATERNO) AS NOMBRE_CORTO 
    FROM USUARIOS
    WHERE CODIGO_PERSONAL = S_USUARIO;
BEGIN
 open C_USUARIO;
 fetch C_USUARIO into p_USUARIO;
 if not C_USUARIO % found then
    P_USUARIO := 'vacio';
 end if;
 close C_USUARIO;
 RETURN( P_USUARIO );
END;
/

CREATE OR REPLACE FUNCTION "ENOC"."ALUMNO_SALDO" (CODIGO IN VARCHAR2) RETURN FLOAT IS
P_SALDO FLOAT;
 CURSOR C_SALDO IS 
 SELECT 
   COALESCE(SUM(IMPORTE*DECODE(NATURALEZA,'C',1,-1)),0)
 FROM MATEO.CONT_MOVIMIENTO 
 WHERE ID_AUXILIARM= CODIGO
 AND ID_EJERCICIO ='001-'||TO_CHAR(SYSDATE,'YYYY')
 AND ID_CTAMAYORM IN('1.1.04.01','1.1.04.29','1.1.04.30')
 AND TIPO_CUENTA = 'B'; 
BEGIN
 OPEN C_SALDO;
 FETCH C_SALDO INTO P_SALDO;
 IF NOT C_SALDO%FOUND THEN
    P_SALDO := 0;
 END IF;
 CLOSE C_SALDO;
 RETURN( P_SALDO );
END;
/




